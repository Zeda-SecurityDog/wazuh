openapi: '3.0.0'
info:
  description: |
    The Wazuh API is an open-source RESTful API that allows for interaction with the Wazuh manager from a web browser,
    command line tools like cURL or any script or program that can make web requests. The Wazuh WUI relies on this
    heavily and Wazuhâ€™s goal is to accommodate complete remote management of the Wazuh infrastructure via the Wazuh WUI.
    Use the Wazuh API to easily perform everyday actions like adding an agent, restarting the manager(s) or agent(s).

    # Authentication

    Wazuh API endpoints require authentication to be used. Therefore, all calls must include a JSON Web Token.
    JWT is an open standard (RFC 7519) that defines a compact and self-contained way for securely transmitting
    information between parties as a JSON object. Perform a call with `basicAuth` to `POST /security/user/authenticate`
    and obtain a JWT token to run any endpoint.

    JWT tokens have a default duration of 900 seconds. To change this value, you must perform a call with a valid
    JWT token to `PUT /security/config`. After this change, you will need to get a new JWT token as all previously
    issued tokens are revoked when any change is performed on security configuration.

    Login with USER and PASSWORD:

    `curl -u <USER>:<PASSWORD> -k -X POST "https://<HOST_IP>:55000/security/user/authenticate"`
    ```json
    {
        "data": {
            "token": "<YOUR_JWT_TOKEN>"
        },
        "error": 0
    }
    ```
    Use the token from the previous response to perform any endpoint request:

    `curl -k -X <METHOD> "https://<HOST_IP>:55000/<ENDPOINT>" -H  "Authorization: Bearer <YOUR_JWT_TOKEN>"`

    Change the token base duration:

    `curl -k -X PUT "https://<HOST_IP>:55000/security/config" -H "Authorization: Bearer <YOUR_JWT_TOKEN>"
    -d '{"auth_token_exp_timeout": <NEW_EXPIRE_TIME_IN_SECONDS>}'`

    <SecurityDefinitions />

  version: '5.0.0'
  x-revision: '50000'
  title: 'Wazuh API REST'
  license:
    name: 'GPL 2.0'
    url: 'https://github.com/wazuh/wazuh/blob/v5.0.0/LICENSE'

servers:
  - url: '{protocol}://{host}:{port}'
    variables:
      protocol:
        default: https
        enum:
          - http
          - https
      host:
        default: localhost
      port:
        default: '55000'

x-rbac-catalog:
  resources:
    '*:*':
      description: "Resource applied in functions acting on resources that do not yet exist in the system. We call these
      functions, resourceless functions"
    'agent:group':
      description: "Reference agents via group name (i.e. agent:group:web)"
    'agent:id':
      description: "Reference agents via agent ID (i.e. agent:id:001)"
    'group:id':
      description: "Reference agent groups via group ID (i.e. group:id:default)"
    'node:id':
      description: "Reference cluster nodes via node ID (i.e. node:id:worker1)"
    'policy:id':
      description: "Reference security policies via its id (i.e. policy:id:1)"
    'role:id':
      description: "Reference security roles via its id (i.e. role:id:1)"
    'rule:id':
      description: "Reference security rules via its id (i.e. rule:id:1)"
    'user:id':
      description: "Reference security users via its id (i.e. user:id:1)"
  actions:
    'agent:create':
      description: "Create new agents"
      resources:
        - $ref: '#/x-rbac-catalog/resources/*:*'
      example:
        actions: ['agent:create']
        resources: ['*:*:*']
        effect: "allow"
    'agent:read':
      description: "Access agents information (id, name, group, last keep alive, etc)"
      resources:
        - $ref: '#/x-rbac-catalog/resources/agent:id'
        - $ref: '#/x-rbac-catalog/resources/agent:group'
      example:
        actions: ['agent:read']
        resources: ['agent:id:*']
        effect: "allow"
    'agent:delete':
      description: "Delete agents"
      resources:
        - $ref: '#/x-rbac-catalog/resources/agent:id'
        - $ref: '#/x-rbac-catalog/resources/agent:group'
      example:
        actions: ['agent:delete']
        resources: ['agent:id:010', 'agent:group:pacific']
        effect: "allow"
    'agent:modify_group':
      description: "Change the group of agents"
      resources:
       - $ref: '#/x-rbac-catalog/resources/agent:id'
       - $ref: '#/x-rbac-catalog/resources/agent:group'
      example:
        actions: ['agent:modify_group']
        resources: ['agent:id:004', 'agent:group:us-east']
        effect: "allow"
    'group:modify_assignments':
      description: "Change the agents assigned to the group"
      resources:
       - $ref: '#/x-rbac-catalog/resources/group:id'
      example:
        actions: ['group:modify_assignments']
        resources: ['group:id:*']
        effect: "allow"
    'agent:reconnect':
      description: "Force reconnect agents"
      resources:
        - $ref: '#/x-rbac-catalog/resources/agent:id'
        - $ref: '#/x-rbac-catalog/resources/agent:group'
      example:
        actions: [ 'agent:reconnect' ]
        resources: [ 'agent:id:050', 'agent:id:049' ]
        effect: "deny"
    'agent:restart':
      description: "Restart agents"
      resources:
       - $ref: '#/x-rbac-catalog/resources/agent:id'
       - $ref: '#/x-rbac-catalog/resources/agent:group'
      example:
        actions: ['agent:restart']
        resources: ['agent:id:050', 'agent:id:049']
        effect: "deny"
    'group:create':
      description: "Create new agent groups"
      resources:
        - $ref: '#/x-rbac-catalog/resources/*:*'
      example:
        actions: ['group:create']
        resources: ['*:*:*']
        effect: "allow"
    'group:read':
      description: "Access agent groups information (id, name, agents, etc)"
      resources:
        - $ref: '#/x-rbac-catalog/resources/group:id'
      example:
        actions: ['group:create']
        resources: ['group:id:*']
        effect: "allow"
    'group:update_config':
      description: "Change the configuration of agent groups"
      resources:
        - $ref: '#/x-rbac-catalog/resources/group:id'
      example:
        actions: ['group:update_config']
        resources: ['group:id:*']
        effect: "deny"
    'group:delete':
      description: "Delete agent groups"
      resources:
        - $ref: '#/x-rbac-catalog/resources/group:id'
      example:
        actions: ['group:delete']
        resources: ['group:id:*']
        effect: "allow"
    'cluster:read':
      description: "Read Wazuh's cluster nodes configuration"
      resources:
        - $ref: '#/x-rbac-catalog/resources/node:id'
      example:
        actions: ['cluster:read']
        resources: ['node:id:worker1', 'node:id:worker3']
        effect: "deny"
    'cluster:update_config':
      description: "Change the Wazuh's cluster node configuration"
      resources:
        - $ref: '#/x-rbac-catalog/resources/node:id'
      example:
        actions: [ 'cluster:update_config' ]
        resources: ['node:id:worker1']
        effect: "allow"
    'cluster:restart':
      description: "Restart Wazuh's cluster nodes"
      resources:
        - $ref: '#/x-rbac-catalog/resources/node:id'
      example:
        actions: ['cluster:restart']
        resources: ['node:id:worker1']
        effect: "allow"
    'cluster:status':
      description: "Check Wazuh's cluster general status"
      resources:
        - $ref: '#/x-rbac-catalog/resources/*:*'
      example:
        actions: ['cluster:status']
        resources: ['*:*:*']
        effect: "allow"
    'security:create':
      description: "Create new system security resources"
      resources:
        - $ref: '#/x-rbac-catalog/resources/*:*'
      example:
        actions: ['security:create']
        resources: ['*:*:*']
        effect: "deny"
    'security:create_user':
      description: "Create new system users"
      resources:
        - $ref: '#/x-rbac-catalog/resources/*:*'
      example:
        actions: ['security:create_user']
        resources: ['*:*:*']
        effect: "allow"
    'security:read':
      description: "Access information about system security resources"
      resources:
        - $ref: '#/x-rbac-catalog/resources/policy:id'
        - $ref: '#/x-rbac-catalog/resources/role:id'
        - $ref: '#/x-rbac-catalog/resources/user:id'
        - $ref: '#/x-rbac-catalog/resources/rule:id'
      example:
        actions: ['security:read']
        resources: ['policy:id:*', 'role:id:2', 'user:id:5', 'rule:id:3']
        effect: "allow"
    'security:edit_run_as':
      description: "Change the value of the allow_run_as flag for a user"
      resources:
        - $ref: '#/x-rbac-catalog/resources/*:*'
      example:
        actions: [ 'security:edit_run_as' ]
        resources: [ '*:*:*' ]
        effect: "allow"
    'security:update':
      description: "Update the information of system security resources"
      resources:
        - $ref: '#/x-rbac-catalog/resources/policy:id'
        - $ref: '#/x-rbac-catalog/resources/role:id'
        - $ref: '#/x-rbac-catalog/resources/user:id'
        - $ref: '#/x-rbac-catalog/resources/rule:id'
      example:
        actions: ['security:update']
        resources: ['policy:id:*', 'role:id:4', 'user:id:3', 'rule:id:4']
        effect: "deny"
    'security:delete':
      description: "Delete system security resources"
      resources:
        - $ref: '#/x-rbac-catalog/resources/policy:id'
        - $ref: '#/x-rbac-catalog/resources/role:id'
        - $ref: '#/x-rbac-catalog/resources/user:id'
        - $ref: '#/x-rbac-catalog/resources/rule:id'
      example:
        actions: ['security:update']
        resources: ['policy:id:*', 'role:id:3', 'user:id:4', 'rule:id:2']
        effect: "deny"
    'security:read_config':
      description: "Read current system security configuration"
      resources:
        - $ref: '#/x-rbac-catalog/resources/*:*'
      example:
        actions: ['security:read_config']
        resources: ['*:*:*']
        effect: "allow"
    'security:update_config':
      description: "Update current system security configuration"
      resources:
        - $ref: '#/x-rbac-catalog/resources/*:*'
      example:
        actions: ['security:update_config']
        resources: ['*:*:*']
        effect: "allow"
    'order:send':
      description: Send orders to the server
      resources:
        - $ref: '#/x-rbac-catalog/resources/*:*'
      example:
        actions: ['order:send']
        resources: ['*:*:*']
        effect: "allow"

components:
  responses:
    ResponseError:
      description: "Response to report a bad request"
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RequestError'
          example:
            title: "Bad Request"
            detail: "'{invalid_param}' is not a '{expected_type}'. Failed validating 'format' in schema['items']:
            {'description': '{parameter_name}', 'format': '{expected_format}', 'minLength': {expected_length}, 'type':
            '{expected_type}', 'x-scope': ['', '#/components/parameters/{parameter_name}']}"

    PermissionDeniedResponse:
      description: "Response to report a permission denied request"
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiError'
          example:
            title: "Permission Denied"
            detail: "Permission denied: Resource type: *:*"
            remediation: "Please, make sure you have permissions to execute the current request. For more information
            on how to set up permissions, please visit
            https://documentation.wazuh.com/5.0/user-manual/api/rbac/configuration.html"
            error: 4000
            dapi_errors:
              unknown-node:
                error: "Permission denied: Resource type: *:*"

    UnauthorizedResponse:
      description: "Response to report an unauthorized request"
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RequestError'
          example:
            title: "Unauthorized"
            detail: "No authorization token provided"

    InvalidCredentialsResponse:
      description: "Response to report a problem with authentication"
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RequestError'
          example:
            title: "Unauthorized"
            detail: "Invalid credentials"

    InvalidHTTPMethodResponse:
      description: "Response to report an invalid HTTP method"
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RequestError'
          example:
            title: "Method Not Allowed"
            detail: "Specified method is invalid for this resource"

    WrongContentTypeResponse:
      description: "Response to report an invalid content-type"
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RequestError'
          example:
            title: "Wazuh Error"
            detail: "The body type is not the one specified in the content-type"
            error: 6002

    RequestTooLargeResponse:
      description: "Maximum request body size exceeded"
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RequestError'
          example:
            title: "Request Entity Too Large"
            detail: "Maximum request body size 1048576 exceeded, actual body size 1225245"

    TooManyRequestsResponse:
      description: "Maximum number of request per minute reached"
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RequestError'
          example:
            title: "Wazuh Error"
            detail: "Maximum number of requests per minute reached"
            remediation: "This limit can be changed in api.yaml file. More information here:
            https://documentation.wazuh.com/5.0/user-manual/api/security/configuration.html"
            code: 6001

    ResourceNotFoundResponse:
      description: "Resource not found"
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiError'
          example:
            title: "Resource Not Found"
            detail: "The group does not exist"
            remediation: "Please, use `GET /groups` to find all available groups:
            https://documentation.wazuh.com/5.0/user-manual/api/rbac/configuration.html"
            code: 1710
            dapi_errors:
              unknown-node:
                error: "The group does not exist"

    UnsupportedMediaTypeResponse:
      description: "Unsupported media type"
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiError'
          example:
            title: "Unsupported media type"
            detail: "Invalid Content-type (application/json), expected ['application/octet-stream']"

  schemas:
    ## Common models
    ApiResponse:
      type: object
      properties:
        message:
          type: string
          description: "Human readable description to explain the result of the request"

    SimpleApiError:
      type: object
      required:
        - error
      properties:
        error:
          type: object
          additionalProperties:
            properties:
              code:
                type: integer
                format: int32
              message:
                type: string
              remediation:
                type: string
        id:
          type: array
          items:
            oneOf:
              - type: string
              - type: integer

    ApiError:
      type: object
      required:
        - title
        - detail
      nullable: true
      properties:
        title:
          type: string
        detail:
          type: string
        instance:
          type: string
          format: uri
        code:
          type: integer
          format: int32
        remediation:
          type: string
        dapi_errors:
          type: object
          additionalProperties:
            type: object
            properties:
              error:
                type: string
              logfile:
                type: string
                format: path

    RequestError:
      type: object
      required:
        - title
        - detail
      nullable: true
      properties:
        title:
          type: string
        detail:
          type: string
        error:
          type: integer
          format: int32

    ScanIdTime:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: "Scan ID"
        time:
          type: string
          format: date-time
          description: "Date when the scan was performed"

    ItemAffected:
      type: object
      required:
        - affected_items
      properties:
        affected_items:
          type: array
          description: "Items that successfully applied the API call action"
          items:
            oneOf:
              - type: string
              - type: object

    AllItemsResponse:
      type: object
      required:
        - total_affected_items
        - failed_items
        - total_failed_items
      properties:
        total_affected_items:
          type: integer
          format: int32
          description: "Number of items that have successfully applied the requested operation"
        failed_items:
          type: array
          description: "List of items that have failed applying the requested operation"
          items:
            $ref: '#/components/schemas/SimpleApiError'
        total_failed_items:
          type: integer
          format: int32
          description: "Number of items that have failed applying the requested operation"

    AllItemsResponseAgents:
      allOf:
        - $ref: '#/components/schemas/AllItemsResponse'
        - type: object
          required:
            - affected_items
          properties:
            affected_items:
              type: array
              description: "Items that successfully applied the API call action"
              items:
                $ref: '#/components/schemas/Agent'

    AllItemsResponseGroups:
      allOf:
        - type: object
          required:
            - affected_items
          properties:
            affected_items:
              type: array
              description: "Items that successfully applied the API call action"
              items:
                $ref: '#/components/schemas/AgentGroup'
        - $ref: '#/components/schemas/AllItemsResponse'

    AllItemsResponseAgentIDs:
      allOf:
        - type: object
          required:
            - affected_items
          properties:
            affected_items:
              type: array
              description: "Items that successfully applied the API call action"
              items:
                $ref: '#/components/schemas/AgentID'
        - $ref: '#/components/schemas/AllItemsResponse'

    AllItemsResponseNodeIDs:
      allOf:
        - type: object
          required:
            - affected_items
          properties:
            affected_items:
              type: array
              description: "Items that successfully applied the API call action"
              items:
                $ref: '#/components/schemas/NodeID'
        - $ref: '#/components/schemas/AllItemsResponse'

    AllItemsResponseNodeHealthcheck:
      allOf:
        - type: object
          required:
            - affected_items
          properties:
            affected_items:
              type: array
              description: "Items that successfully applied the API call action"
              items:
                $ref: '#/components/schemas/NodeHealthcheck'
        - $ref: '#/components/schemas/AllItemsResponse'

    AllItemsResponseGroupIDs:
      allOf:
        - type: object
          required:
            - affected_items
          properties:
            affected_items:
              type: array
              description: "Items that successfully applied the API call action"
              items:
                $ref: '#/components/schemas/GroupID'
        - $ref: '#/components/schemas/AllItemsResponse'

    AllItemsResponseRoles:
      allOf:
        - $ref: '#/components/schemas/AllItemsResponse'
        - type: object
          required:
            - affected_items
          properties:
            affected_items:
              type: array
              description: "Items that successfully applied the API call action"
              items:
                $ref: '#/components/schemas/RolesResponse'

    AllItemsResponsePolicies:
      allOf:
        - $ref: '#/components/schemas/AllItemsResponse'
        - type: object
          required:
            - affected_items
          properties:
            affected_items:
              type: array
              description: "Items that successfully applied the API call action"
              items:
                oneOf:
                  - $ref: '#/components/schemas/PoliciesResponse'
                  - type: integer

    AllItemsResponseUsers:
      allOf:
        - $ref: '#/components/schemas/AllItemsResponse'
        - type: object
          required:
            - affected_items
          properties:
            affected_items:
              type: array
              description: "Items that successfully applied the API call action"
              items:
                $ref: '#/components/schemas/UsersResponse'

    AllItemsResponseGroupFiles:
      allOf:
        - $ref: '#/components/schemas/AllItemsResponse'
        - type: object
          required:
            - affected_items
          properties:
            affected_items:
              type: array
              description: "Items that successfully applied the API call action"
              items:
                $ref: '#/components/schemas/GroupFiles'

    AllItemsResponseLastScan:
      allOf:
        - $ref: '#/components/schemas/AllItemsResponse'
        - type: object
          required:
            - affected_items
          properties:
            affected_items:
              type: array
              description: "Items that successfully applied the API call action"
              items:
                $ref: '#/components/schemas/LastScan'

    AllItemsResponseClusterNodes:
      allOf:
        - $ref: '#/components/schemas/AllItemsResponse'
        - type: object
          required:
            - affected_items
          properties:
            affected_items:
              type: array
              description: "Items that successfully applied the API call action"
              items:
                  $ref: '#/components/schemas/ClusterNode'

    AllItemsResponseWazuhLogs:
      allOf:
        - $ref: '#/components/schemas/AllItemsResponse'
        - type: object
          required:
            - affected_items
          properties:
            affected_items:
              type: array
              description: "Items that successfully applied the API call action"
              items:
                  $ref: '#/components/schemas/WazuhLogs'

    AllItemsResponseValidationStatus:
      allOf:
        - $ref: '#/components/schemas/AllItemsResponse'
        - type: object
          required:
            - affected_items
          properties:
            affected_items:
              type: array
              description: "Items that successfully applied the API call action"
              items:
                  $ref: '#/components/schemas/ValidationStatus'

    BasicInfo:
      type: object
      properties:
        title:
          type: string
          description: "API title name"
        api_version:
          type: string
          description: "API version in the manager"
        revision:
          type: integer
          description: "API revision"
          format: int32
        license_name:
          type: string
          description: "API license name"
        license_url:
          type: string
          description: "API license url"
        hostname:
          type: string
          description: "Server hostname"
        timestamp:
          type: string

    ## Agents models
    Agent:
      type: object
      properties:
        version:
          type: string
          description: "Wazuh version the agent has installed"
        id:
          $ref: '#/components/schemas/AgentID'
        name:
          type: string
          description: "Agent name used at the registration process"
        status:
          $ref: '#/components/schemas/AgentStatus'
        configSum:
          type: string
          description: "MD5 checksum of the group configuration file (agent.conf)"
        group:
          type: array
          description: "List of groups the agent belongs to"
          items:
            type: string
        mergedSum:
          type: string
          description: "MD5 checksum of all group shared files merged in a single one (merged.mg)"
        ip:
          type: string
          description: "IP where the agent communicates with the manager. If the manager can't get this information, it
          will be the same as registerIP field"
        registerIP:
          type: string
          description: "IP used at agent the registration process"
        manager:
          type: string
          description: "Hostname of the manager the agent is reporting to"
        node_name:
          type: string
          description: "ID of the node the agent is reporting to"
        dateAdd:
          type: string
          description: "Date when the agent was registered"
        lastKeepAlive:
          type: string
          description: "Date when the last keepalive was received from the agent"
        os:
          type: object
          properties:
            major:
              type: string
            name:
              type: string
            uname:
              type: string
            platform:
              type: string
            version:
              type: string
            codename:
              type: string
            arch:
              type: string
            minor:
              type: string
          description: "Agent OS information"
        status_code:
          description: "Agent connection status code"
          type: integer
          format: int32
          default: 0
          minimum: 0
          maximum: 5
        group_config_status:
          type: string
          description: "Agent groups configuration sync status"

    AgentAddBody:
      type: object
      properties:
        id:
          description: "Agent id"
          type: string
          format: uuid4
        name:
          description: "Agent name"
          type: string
          format: names
        key:
          description: "Agent authentication key"
          type: string
          format: alphanumeric_symbols
        type:
          description: "Agent type"
          type: string
        version:
          description: "Agent version"
          type: string
        groups:
          description: "Agent groups"
          type: array
          items:
            type: string
        host:
          description: "Agent host"
          type: object
          properties:
            architecture:
              type: string
            hostname:
              type: string
            ip:
              type: array
              items:
                type: string
            os:
              type: object
              properties:
                name:
                  type: string
                platform:
                  type: string
      required:
      - id
      - name
      - key
      - type
      - version

    AgentGroup:
      type: object
      properties:
        name:
          type: string
        configSum:
          type: string
          format: hash
          description: "MD5 checksum of the group configuration file (agent.conf)"

    AgentGroupDeleted:
      type: object
      required:
      - affected_items
      properties:
        affected_items:
          type: array
          description: "List of removed groups, agents belonging exclusively to the removed groups will be reassigned to group default"

    AgentStatus:
      type: string
      enum:
      - active
      - pending
      - never_connected
      - disconnected
      description: "Agent status. It is calculated based on the last keepalive and the Wazuh version"

    AgentID:
      type: string
      description: "Agent ID"
      format: uuid4

    AgentIDListAll:
      type: string
      minLength: 3
      description: "Agent ID|all"
      format: uuid

    NodeID:
      type: string
      description: "Node ID"
      format: string

    ## Group models
    GroupID:
      type: string
      description: "Group name"
      format: group_names

    GroupIDListAll:
      type: string
      minLength: 1
      description: "Group name|all"
      format: group_names_or_all

    GroupConfiguration:
      type: object
      properties:
        filters:
          type: object
          properties:
            os:
              type: string
              description: "OS family where the configuration is being applied"
            name:
              type: string
              description: "The name of the agent where that configuration is being applied"
            profile:
              type: string
              description: "Profile name. Any agent configured to use the defined profile may use the block"
        config:
          type: object
          description: "Group configuration. The fields on this object depend on the actual group configuration"
      required:
        - filters
        - config

    CreateGroupBody:
      type: object
      properties:
        group_id:
          description: "Group name. It can contain any of the characters between a-z, A-Z, 0-9, '_', '-' and '.'. Names '.' and '..' are restricted."
          type: string
          format: group_names
          maxLength: 128
      required:
        - group_id
      example:
        group_id: NewGroup_1

    GroupFiles:
      type: object
      properties:
        filename:
          type: string
          description: "File name"
        hash:
          type: string
          description: "File content hash"
      example:
        filename: agent.conf
        hash: ab73af41699f13fdd81903b5f23d8d00

    ## Cluster models
    ClusterNodeBasic:
      type: object
      properties:
        type:
          type: string
          enum:
          - worker
          - master
          description: "Node type"
        version:
          type: string
          format: \d+\.\d+\.\d+
          description: "Wazuh version installed in the node"
        ip:
          type: string
          description: "IP the node is using to communicate with other nodes in the cluster"

    ClusterNodeName:
      type: string
      description: "Node ID"

    ClusterNode:
      allOf:
        - $ref: '#/components/schemas/ClusterNodeBasic'
        - type: object
          properties:
            name:
              $ref: '#/components/schemas/ClusterNodeName'

    NodeHealthcheck:
      type: object
      properties:
        name:
          type: object
          properties:
            info:
              type: object
              properties:
                name:
                  $ref: '#/components/schemas/ClusterNodeName'
                info:
                  allOf:
                    - $ref: '#/components/schemas/ClusterNodeBasic'
                    - type: object
                      properties:
                        totalActiveAgents:
                          type: integer
                          format: int32
                          minimum: 0
                          description: "Number of agents currently reporting to that node"
            status:
              type: object
              properties:
                last_keep_alive:
                  type: string
                last_sync_agentinfo:
                  type: object
                  properties:
                    date_start_master:
                      type: string
                    date_end_master:
                      type: string
                    n_synced_chunks:
                      type: integer
                      format: int32
                last_sync_agentgroup:
                  type: object
                  properties:
                    date_start:
                      type: string
                    date_end:
                      type: string
                    n_synced_chunks:
                      type: integer
                      format: int32
                last_sync_full_agentgroup:
                  type: object
                  properties:
                    date_start:
                      type: string
                    date_end:
                      type: string
                    n_synced_chunks:
                      type: integer
                      format: int32
                last_sync_integrity:
                  type: object
                  properties:
                    date_start_master:
                        type: string
                    date_end_master:
                        type: string
                    total_files:
                      type: object
                      properties:
                        extra:
                          type: integer
                          format: int32
                        extra_valid:
                          type: integer
                          format: int32
                        missing:
                          type: integer
                          format: int32
                        shared:
                          type: integer
                          format: int32
                sync_agent_info_free:
                  type: boolean
                sync_integrity_free:
                  type: boolean

    DaemonStatus:
      type: string
      enum:
      - stopped
      - running

    ClusterStatus:
      type: object
      properties:
        data:
          properties:
            enabled:
              description: "Whether the cluster is enabled in the Wazuh configuration"
              type: string
              enum:
              - "yes"
              - "no"
            running:
              description: "Whether the cluster daemon is running"
              type: string
              enum:
              - "yes"
              - "no"

    # Security models
    Role_id:
      type: string
      format: numbers
      description: "Role ID"
    Role_id_DELETE:
      type: string
      description: "Role ID|all"
      format: numbers_or_all
    Security_rule_id:
      type: string
      format: numbers
      description: "Security rule ID"
    Security_rule_id_DELETE:
      type: string
      format: numbers_or_all
      description: "Security rule ID|all"
    Task_id:
      type: string
      format: numbers
      description: "Task ID"
    Policy_id:
      type: string
      format: numbers
      description: "Policy ID"
    Policy_id_DELETE:
      type: string
      description: "Policy ID|all"
      format: numbers_or_all
    User_id:
      type: string
      format: numbers
      description: "User ID"
    User_id_DELETE:
      type: string
      format: numbers_or_all
      description: "User ID|all"
    PoliciesRequest:
      type: object
      required:
        - name
        - policy
      properties:
        name:
          description: "Policy name"
          type: string
          maxLength: 64
          format: names
        policy:
          description: "New policy definition"
          type: object
          properties:
            actions:
              type: array
              description: "Actions to perform"
              items:
                type: string
            resources:
              type: array
              description: "Resources to apply the actions on"
              items:
                type: string
            effect:
              type: string
              description: "Effect of the policy"
          required:
            - actions
            - resources
            - effect
    PoliciesRequest_no_required:
      type: object
      properties:
        name:
          description: "Policy name"
          type: string
          maxLength: 64
          format: names
        policy:
          description: "New policy definition"
          type: object
          properties:
            actions:
              type: array
              description: "Actions to perform"
              items:
                type: string
            resources:
              type: array
              description: "Resources to apply the actions on"
              items:
                type: string
            effect:
              type: string
              description: "Effect of the policy"
          required:
            - actions
            - resources
            - effect
    PoliciesResponse:
      type: object
      properties:
        id:
          description: "Policy id"
          type: integer
        name:
          description: "Policy name"
          type: string
        policy:
          description: "New policy definition"
          type: object
          properties:
            actions:
              type: array
              description: "Actions to perform"
              items:
                type: string
            resources:
              type: array
              description: "Resources to apply the actions on"
              items:
                type: string
            effect:
              type: string
              description: "Effect of the policy"
    RolesResponse:
      type: object
      properties:
        id:
          type: integer
          description: "Role id"
        name:
          type: string
          description: "Role name"
        rule:
          type: object
          description: "Role rule"
    RolesRequest:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          description: "Role name"
          maxLength: 64
          format: names
    RolesRequest_no_required:
      type: object
      properties:
        name:
          type: string
          description: "Role name"
          maxLength: 64
          format: names
    SecurityRulesRequest:
      type: object
      required:
        - name
        - rule
      properties:
        name:
          type: string
          description: "Rule name"
          maxLength: 64
          format: names
        rule:
          type: object
          description: "Rule body"
    SecurityRulesRequest_no_required:
      type: object
      properties:
        name:
          type: string
          description: "Rule name"
          maxLength: 64
          format: names
        rule:
          type: object
          description: "Rule body"
    UsersResponse:
      type: object
      properties:
        id:
          type: integer
          description: "User's id"
        username:
          type: string
        allow_run_as:
          type: boolean
          description: "Flag to enable the user to log in using authorization context"
        roles:
          type: array
          description: "User's roles"
    Token:
      type: object
      properties:
        token:
          type: string
          description: "User's JWT token"

    # Cluster and manager models
    WazuhRemotedStatsItem:
      type: object
      properties:
        uptime:
          type: string
          format: date-time
          description: "When the count of the metrics started"
        timestamp:
          type: string
          format: date-time
          description: "Daemon stats request time"
        name:
          type: string
          description: "Daemon name"
          enum:
            - wazuh-remoted
        metrics:
          type: object
          properties:
            bytes:
              type: object
              properties:
                received:
                  type: integer
                  format: int32
                  description: "Bytes received from agents"
                sent:
                  type: integer
                  format: int32
                  description: "Bytes sent to agents"
            keys_reload_count:
              type: integer
              format: int32
              description: "Number of times keys were reloaded into memory"
            messages:
              type: object
              properties:
                received_breakdown:
                  type: object
                  properties:
                    control:
                      type: integer
                      format: int32
                      description: "Control messages received from agents"
                    control_breakdown:
                      type: object
                      properties:
                        keepalive:
                          type: integer
                          format: int32
                          description: "Keepalive messages from agents"
                        request:
                          type: integer
                          format: int32
                          description: "Request messages (for example, WPK responses) from agents"
                        shutdown:
                          type: integer
                          format: int32
                          description: "Shutdown messages from agents"
                        startup:
                          type: integer
                          format: int32
                          description: "Startup messages from agents"
                    dequeued_after:
                      type: integer
                      format: int32
                      description: "Messages dequeued after newer messages (counter < current counter)"
                    discarded:
                      type: integer
                      format: int32
                      description: "Messages discarded because the received queue was full"
                    event:
                      type: integer
                      format: int32
                      description: "Event messages (syscheck, syscollector, logcollector, etc.) received from agents"
                    ping:
                      type: integer
                      format: int32
                      description: "Ping messages received"
                    unknown:
                      type: integer
                      format: int32
                      description: "Not recognized messages"
                sent_breakdown:
                  type: object
                  properties:
                    ack:
                      type: integer
                      format: int32
                      description : "ACK messages (response to keepalive, startup and shutdown) sent to agents"
                    ar:
                      type: integer
                      format: int32
                      description: "Active response messages sent to agents"
                    discarded:
                      type: integer
                      format: int32
                      description: "Messages discarded because the send queue was full"
                    request:
                      type: integer
                      format: int32
                      description: "Request messages (for example, WPK chunks) sent to agents"
                    sca:
                      type: integer
                      format: int32
                      description: "SCA messages sent to agents"
                    shared:
                      type: integer
                      format: int32
                      description: "Shared configuration messages (merged.mg) sent to agents"
            queues:
              type: object
              properties:
                received:
                  type: object
                  properties:
                    size:
                      type: integer
                      format: int32
                      description: "Received messages queue size"
                    usage:
                      type: integer
                      format: int32
                      description: "Current usage of the received queue (count)"
            tcp_sessions:
              type: integer
              format: int32
              description: "Current active TCP sessions (agents)"

    WazuhAnalysisdStatsItem:
      type: object
      properties:
        uptime:
          type: string
          format: date-time
          description: "When the count of the metrics started"
        timestamp:
          type: string
          format: date-time
          description: "Daemon stats request time"
        name:
          type: string
          description: "Daemon name"
          enum:
            - wazuh-analysisd
        metrics:
          type: object
          properties:
            bytes:
              type: object
              properties:
                received:
                  type: integer
                  format: int32
                  description: "Bytes received from agents and local modules"
            eps:
              type: object
              properties:
                available_credits:
                  type: integer
                  format: int32
                  description: "Available credits to process events in the current timeframe"
                available_credits_prev:
                  type: integer
                  format: int32
                  description: "Available credits to process events in the previous timeframe"
                events_dropped:
                  type: integer
                  format: int32
                  description: "Events discarded because the EPS limit was reached and queues were full"
                events_dropped_not_eps:
                  type: integer
                  format: int32
                  description: "Events discarded due to causes unrelated to EPS limit"
                seconds_over_limit:
                  type: integer
                  format: int32
                  description: "Time in seconds the EPS limit was exceeded"
            events:
              type: object
              properties:
                processed:
                  type: integer
                  format: int32
                  description: "Total processed events"
                received:
                  type: integer
                  format: int32
                  description: "Total received events from agents and local modules"
                received_breakdown:
                  type: object
                  properties:
                    decoded_breakdown:
                      type: object
                      properties:
                        agent:
                          type: integer
                          format: int32
                          description: "Events coming from agentd"
                        agentless:
                          type: integer
                          format: int32
                          description: "Events coming from agentlessd"
                        dbsync:
                          type: integer
                          format: int32
                          description: "Synchronization events"
                        integrations_breakdown:
                          type: object
                          properties:
                            virustotal:
                              type: integer
                              format: int32
                              description: "Events coming from VirusTotal integration"
                        modules_breakdown:
                          type: object
                          properties:
                            aws:
                              type: integer
                              format: int32
                              description: "Events coming from AWS module"
                            azure:
                              type: integer
                              format: int32
                              description: "Events coming from Azure module"
                            ciscat:
                              type: integer
                              format: int32
                              description: "Events coming from CIS-CAT module"
                            command:
                              type: integer
                              format: int32
                              description: "Events coming from command module"
                            docker:
                              type: integer
                              format: int32
                              description: "Events coming from Docker module"
                            gcp:
                              type: integer
                              format: int32
                              description: "Events coming from GCP module"
                            github:
                              type: integer
                              format: int32
                              description: "Events coming from GitHub module"
                            logcollector_breakdown:
                              type: object
                              properties:
                                eventchannel:
                                  type: integer
                                  format: int32
                                  description: "EventChannel events collected by logcollector"
                                eventlog:
                                  type: integer
                                  format: int32
                                  description: "EventLog events collected by logcollector"
                                macos:
                                  type: integer
                                  format: int32
                                  description: "MacOS events collected by logcollector"
                                others:
                                  type: integer
                                  format: int32
                                  description: "Other events collected by logcollector"
                            office365:
                              type: integer
                              format: int32
                              description: "Events coming from Office365 module"
                            ms-graph:
                              type: integer
                              format: int32
                              description: "Events coming from ms-graph module"
                            oscap:
                              type: integer
                              format: int32
                              description: "Events coming from OSCAP module"
                            osquery:
                              type: integer
                              format: int32
                              description: "Events coming from OSQuery module"
                            rootcheck:
                              type: integer
                              format: int32
                              description: "Events coming from rootcheck (syscheckd)"
                            sca:
                              type: integer
                              format: int32
                              description: "Events coming from SCA module"
                            syscheck:
                              type: integer
                              format: int32
                              description: "Events coming from syscheckd"
                            syscollector:
                              type: integer
                              format: int32
                              description: "Events coming from syscollector module"
                            upgrade:
                              type: integer
                              format: int32
                              description: "Events coming from upgrade agent module (upgrade responses)"
                        monitor:
                          type: integer
                          format: int32
                          description: "Events coming from monitord"
                        remote:
                          type: integer
                          format: int32
                          description: "Events coming from remoted"
                        syslog:
                          type: integer
                          format: int32
                          description: "Events coming from syslog remoted"
                    dropped_breakdown:
                      type: object
                      properties:
                        agent:
                          type: integer
                          format: int32
                          description: "Events discarded from agentd because the queue was full"
                        agentless:
                          type: integer
                          format: int32
                          description: "Events discarded from agentlessd because the queue was full"
                        dbsync:
                          type: integer
                          format: int32
                          description: "Synchronization events discarded because the queue was full"
                        integrations_breakdown:
                          type: object
                          properties:
                            virustotal:
                              type: integer
                              format: int32
                              description: "Events discarded from VirusTotal integration because the queue was full"
                        modules_breakdown:
                          type: object
                          properties:
                            aws:
                              type: integer
                              format: int32
                              description: "Events discarded from AWS module because the queue was full"
                            azure:
                              type: integer
                              format: int32
                              description: "Events discarded from Azure module because the queue was full"
                            ciscat:
                              type: integer
                              format: int32
                              description: "Events discarded from CIS-CAT module because the queue was full"
                            command:
                              type: integer
                              format: int32
                              description: "Events discarded from command module because the queue was full"
                            docker:
                              type: integer
                              format: int32
                              description: "Events discarded from Docker module because the queue was full"
                            gcp:
                              type: integer
                              format: int32
                              description: "Events discarded from GCP module because the queue was full"
                            github:
                              type: integer
                              format: int32
                              description: "Events discarded from GitHub module because the queue was full"
                            logcollector_breakdown:
                              type: object
                              properties:
                                eventchannel:
                                  type: integer
                                  format: int32
                                  description: "EventChannel events collected by logcollector discarded because the queue was full"
                                eventlog:
                                  type: integer
                                  format: int32
                                  description: "EventLog events collected by logcollector discarded because the queue was full"
                                macos:
                                  type: integer
                                  format: int32
                                  description: "MacOS events collected by logcollector discarded because the queue was full"
                                others:
                                  type: integer
                                  format: int32
                                  description: "Other events collected by logcollector discarded because the queue was full"
                            office365:
                              type: integer
                              format: int32
                              description: "Events discarded from Office365 module because the queue was full"
                            ms-graph:
                              type: integer
                              format: int32
                              description: "Events discarded from ms-graph module because the queue was full"
                            oscap:
                              type: integer
                              format: int32
                              description: "Events discarded from OSCAP module because the queue was full"
                            osquery:
                              type: integer
                              format: int32
                              description: "Events discarded from OSQuery module because the queue was full"
                            rootcheck:
                              type: integer
                              format: int32
                              description: "Events discarded from rootcheck (syscheckd) because the queue was full"
                            sca:
                              type: integer
                              format: int32
                              description: "Events discarded from SCA module because the queue was full"
                            syscheck:
                              type: integer
                              format: int32
                              description: "Events discarded from syscheckd because the queue was full"
                            syscollector:
                              type: integer
                              format: int32
                              description: "Events discarded from syscollector module because the queue was full"
                            upgrade:
                              type: integer
                              format: int32
                              description: "Events discarded from upgrade agent module because the queue was full"
                        monitor:
                          type: integer
                          format: int32
                          description: "Events discarded from monitord because the queue was full"
                        remote:
                          type: integer
                          format: int32
                          description: "Events discarded from remoted because the queue was full"
                        syslog:
                          type: integer
                          format: int32
                          description: "Events discarded from syslog remoted because the queue was full"
                written_breakdown:
                  type: object
                  properties:
                    alerts:
                      type: integer
                      format: int32
                      description: "Alerts written in alerts log file"
                    archives:
                      type: integer
                      format: int32
                      description: "Alerts written in archives log file"
                    firewall:
                      type: integer
                      format: int32
                      description: "Alerts written in firewall log file"
                    fts:
                      type: integer
                      format: int32
                      description: "Alerts written in FTS queue file"
                    stats:
                      type: integer
                      format: int32
                      description: "Alerts written in stats files"
            queues:
              type: object
              properties:
                alerts:
                  type: object
                  properties:
                    size:
                      type: integer
                      format: int32
                      description: "Alerts messages queue size"
                    usage:
                      type: integer
                      format: int32
                      description: "Current usage of the alerts queue (percentage)"
                archives:
                  type: object
                  properties:
                    size:
                      type: integer
                      format: int32
                      description: "Archives messages queue size"
                    usage:
                      type: integer
                      format: int32
                      description: "Current usage of the archives queue (percentage)"
                dbsync:
                  type: object
                  properties:
                    size:
                      type: integer
                      format: int32
                      description: "DBsync messages queue size"
                    usage:
                      type: integer
                      format: int32
                      description: "Current usage of the dbsync queue (percentage)"
                eventchannel:
                  type: object
                  properties:
                    size:
                      type: integer
                      format: int32
                      description: "EventChannel messages queue size"
                    usage:
                      type: integer
                      format: int32
                      description: "Current usage of the eventchannel queue (percentage)"
                firewall:
                  type: object
                  properties:
                    size:
                      type: integer
                      format: int32
                      description: "Firewall messages queue size"
                    usage:
                      type: integer
                      format: int32
                      description: "Current usage of the firewall queue (percentage)"
                fts:
                  type: object
                  properties:
                    size:
                      type: integer
                      format: int32
                      description: "FTS messages queue size"
                    usage:
                      type: integer
                      format: int32
                      description: "Current usage of the FTS queue (percentage)"
                hostinfo:
                  type: object
                  properties:
                    size:
                      type: integer
                      format: int32
                      description: "Hostinfo messages queue size"
                    usage:
                      type: integer
                      format: int32
                      description: "Current usage of the hostinfo queue (percentage)"
                others:
                  type: object
                  properties:
                    size:
                      type: integer
                      format: int32
                      description: "Other events messages queue size"
                    usage:
                      type: integer
                      format: int32
                      description: "Current usage of the other events queue (percentage)"
                processed:
                  type: object
                  properties:
                    size:
                      type: integer
                      format: int32
                      description: "Processed messages queue size"
                    usage:
                      type: integer
                      format: int32
                      description: "Current usage of the processed queue (percentage)"
                rootcheck:
                  type: object
                  properties:
                    size:
                      type: integer
                      format: int32
                      description: "Rootcheck messages queue size"
                    usage:
                      type: integer
                      format: int32
                      description: "Current usage of the rootcheck queue (percentage)"
                sca:
                  type: object
                  properties:
                    size:
                      type: integer
                      format: int32
                      description: "SCA messages queue size"
                    usage:
                      type: integer
                      format: int32
                      description: "Current usage of the SCA queue (percentage)"
                stats:
                  type: object
                  properties:
                    size:
                      type: integer
                      format: int32
                      description: "Stats messages queue size"
                    usage:
                      type: integer
                      format: int32
                      description: "Current usage of the stats queue (percentage)"
                syscheck:
                  type: object
                  properties:
                    size:
                      type: integer
                      format: int32
                      description: "Syscheck messages queue size"
                    usage:
                      type: integer
                      format: int32
                      description: "Current usage of the syscheck queue (percentage)"
                syscollector:
                  type: object
                  properties:
                    size:
                      type: integer
                      format: int32
                      description: "Syscollector messages queue size"
                    usage:
                      type: integer
                      format: int32
                      description: "Current usage of the syscollector queue (percentage)"
                upgrade:
                  type: object
                  properties:
                    size:
                      type: integer
                      format: int32
                      description: "Upgrade messages queue size"
                    usage:
                      type: integer
                      format: int32
                      description: "Current usage of the upgrade queue (percentage)"

    WazuhDBStatsItem:
      type: object
      properties:
        uptime:
          type: string
          format: date-time
          description: "When the count of the metrics started"
        timestamp:
          type: string
          format: date-time
          description: "Daemon stats request time"
        name:
          type: string
          description: "Daemon name"
          enum:
            - wazuh-db
        metrics:
          type: object
          properties:
            queries:
              type: object
              properties:
                received:
                  type: integer
                  format: int32
                  description: "Total number of queries through WazuhDB socket"
                received_breakdown:
                  type: object
                  properties:
                    agent:
                      type: integer
                      format: int32
                      description: "Number of agent queries through WazuhDB socket"
                    agent_breakdown:
                      type: object
                      properties:
                        db:
                          type: object
                          description: "Number of queries per operation"
                          properties:
                            begin:
                              type: integer
                              format: int32
                            close:
                              type: integer
                              format: int32
                            commit:
                              type: integer
                              format: int32
                            remove:
                              type: integer
                              format: int32
                            sql:
                              type: integer
                              format: int32
                        tables:
                          type: object
                          description: "Number of queries per table"
                          properties:
                            ciscat:
                              type: object
                              properties:
                                ciscat:
                                  type: integer
                                  format: int32
                            rootcheck:
                              type: object
                              properties:
                                rootcheck:
                                  type: integer
                                  format: int32
                            sca:
                              type: object
                              properties:
                                sca:
                                  type: integer
                                  format: int32
                            sync:
                              type: object
                              properties:
                                dbsync:
                                  type: integer
                                  format: int32
                            syscheck:
                              type: object
                              properties:
                                fim_file:
                                  type: integer
                                  format: int32
                                fim_registry:
                                  type: integer
                                  format: int32
                                fim_registry_key:
                                  type: integer
                                  format: int32
                                fim_registry_value:
                                  type: integer
                                  format: int32
                                syscheck:
                                  type: integer
                                  format: int32
                            syscollector:
                              type: object
                              properties:
                                syscollector_hotfixes:
                                  type: integer
                                  format: int32
                                syscollector_hwinfo:
                                  type: integer
                                  format: int32
                                syscollector_network_address:
                                  type: integer
                                  format: int32
                                syscollector_network_iface:
                                  type: integer
                                  format: int32
                                syscollector_network_protocol:
                                  type: integer
                                  format: int32
                                syscollector_osinfo:
                                  type: integer
                                  format: int32
                                syscollector_packages:
                                  type: integer
                                  format: int32
                                syscollector_ports:
                                  type: integer
                                  format: int32
                                syscollector_processes:
                                  type: integer
                                  format: int32
                                deprecated:
                                  type: object
                                  properties:
                                    hardware:
                                      type: integer
                                      format: int32
                                    hotfix:
                                      type: integer
                                      format: int32
                                    netaddr:
                                      type: integer
                                      format: int32
                                    netinfo:
                                      type: integer
                                      format: int32
                                    netproto:
                                      type: integer
                                      format: int32
                                    osinfo:
                                      type: integer
                                      format: int32
                                    package:
                                      type: integer
                                      format: int32
                                    port:
                                      type: integer
                                      format: int32
                                    process:
                                      type: integer
                                      format: int32
                    global:
                      type: integer
                      format: int32
                      description: "Number of global queries through WazuhDB socket"
                    global_breakdown:
                      type: object
                      properties:
                        db:
                          type: object
                          description: "Number of queries per operation"
                          properties:
                            backup:
                              type: integer
                              format: int32
                            sql:
                              type: integer
                              format: int32
                        tables:
                          type: object
                          description: "Number of queries per operation in tables"
                          properties:
                            agent:
                              type: object
                              properties:
                                delete-agent:
                                  type: integer
                                  format: int32
                                disconnect-agents:
                                  type: integer
                                  format: int32
                                find-agent:
                                  type: integer
                                  format: int32
                                get-agent-info:
                                  type: integer
                                  format: int32
                                get-agents-by-connection-status:
                                  type: integer
                                  format: int32
                                get-all-agents:
                                  type: integer
                                  format: int32
                                get-groups-integrity:
                                  type: integer
                                  format: int32
                                insert-agent:
                                  type: integer
                                  format: int32
                                reset-agents-connection:
                                  type: integer
                                  format: int32
                                select-agent-group:
                                  type: integer
                                  format: int32
                                select-agent-name:
                                  type: integer
                                  format: int32
                                set-agent-groups:
                                  type: integer
                                  format: int32
                                sync-agent-groups-get:
                                  type: integer
                                  format: int32
                                sync-agent-info-get:
                                  type: integer
                                  format: int32
                                sync-agent-info-set":
                                  type: integer
                                  format: int32
                                update-agent-data:
                                  type: integer
                                  format: int32
                                update-agent-name:
                                  type: integer
                                  format: int32
                                update-connection-status:
                                  type: integer
                                  format: int32
                                update-keepalive:
                                  type: integer
                                  format: int32
                            belongs:
                              type: object
                              properties:
                                get-group-agents:
                                  type: integer
                                  format: int32
                                select-group-belong:
                                  type: integer
                                  format: int32
                            group:
                              type: object
                              properties:
                                delete-group:
                                  type: integer
                                  format: int32
                                find-group:
                                  type: integer
                                  format: int32
                                insert-agent-group:
                                  type: integer
                                  format: int32
                                select-groups:
                                  type: integer
                                  format: int32
                            labels:
                              type: object
                              properties:
                                get-labels:
                                  type: integer
                                  format: int32
                    mitre:
                      type: integer
                      format: int32
                      description: "Number of mitre queries through WazuhDB socket"
                    mitre_breakdown:
                      type: object
                      properties:
                        db:
                          type: object
                          description: "Number of queries per operation"
                          properties:
                            sql:
                              type: integer
                              format: int32
                    task:
                      type: integer
                      format: int32
                      description: "Number of task queries through WazuhDB socket"
                    task_breakdown:
                      type: object
                      properties:
                        db:
                          type: object
                          description: "Number of queries per operation"
                          properties:
                            sql:
                              type: integer
                              format: int32
                        tables:
                          type: object
                          description: "Number of queries per operation in tables"
                          properties:
                            tasks:
                              type: object
                              properties:
                                delete_old:
                                  type: integer
                                  format: int32
                                set_timeout:
                                  type: integer
                                  format: int32
                                upgrade:
                                  type: integer
                                  format: int32
                                upgrade_cancel_tasks:
                                  type: integer
                                  format: int32
                                upgrade_custom:
                                  type: integer
                                  format: int32
                                upgrade_get_status:
                                  type: integer
                                  format: int32
                                upgrade_result:
                                  type: integer
                                  format: int32
                                upgrade_update_status:
                                  type: integer
                                  format: int32
                    wazuhdb:
                      type: integer
                      format: int32
                      description: "Number of wazuhdb queries through WazuhDB socket"
                    wazuhdb_breakdown:
                      type: object
                      properties:
                        db:
                          type: object
                          description: "Number of queries per operation"
                          properties:
                            remove:
                              type: integer
                              format: int32
            time:
              type: object
              properties:
                execution:
                  type: integer
                  format: int32
                  description: "Total time taken by all the queries (milliseconds)"
                execution_breakdown:
                  type: object
                  properties:
                    agent:
                      type: integer
                      format: int32
                      description: "Time taken by all agent queries (milliseconds)"
                    agent_breakdown:
                      type: object
                      properties:
                        db:
                          type: object
                          description: "Time taken by all queries per operation (milliseconds)"
                          properties:
                            begin:
                              type: integer
                              format: int32
                            close:
                              type: integer
                              format: int32
                            commit:
                              type: integer
                              format: int32
                            remove:
                              type: integer
                              format: int32
                            sql:
                              type: integer
                              format: int32
                        tables:
                          type: object
                          description: "Time taken by all queries per table (milliseconds)"
                          properties:
                            ciscat:
                              type: object
                              properties:
                                ciscat:
                                  type: integer
                                  format: int32
                            rootcheck:
                              type: object
                              properties:
                                rootcheck:
                                  type: integer
                                  format: int32
                            sca:
                              type: object
                              properties:
                                sca:
                                  type: integer
                                  format: int32
                            sync:
                              type: object
                              properties:
                                dbsync:
                                  type: integer
                                  format: int32
                            syscheck:
                              type: object
                              properties:
                                fim_file:
                                  type: integer
                                  format: int32
                                fim_registry:
                                  type: integer
                                  format: int32
                                fim_registry_key:
                                  type: integer
                                  format: int32
                                fim_registry_value:
                                  type: integer
                                  format: int32
                                syscheck:
                                  type: integer
                                  format: int32
                            syscollector:
                              type: object
                              properties:
                                syscollector_hotfixes:
                                  type: integer
                                  format: int32
                                syscollector_hwinfo:
                                  type: integer
                                  format: int32
                                syscollector_network_address:
                                  type: integer
                                  format: int32
                                syscollector_network_iface:
                                  type: integer
                                  format: int32
                                syscollector_network_protocol:
                                  type: integer
                                  format: int32
                                syscollector_osinfo:
                                  type: integer
                                  format: int32
                                syscollector_packages:
                                  type: integer
                                  format: int32
                                syscollector_ports:
                                  type: integer
                                  format: int32
                                syscollector_processes:
                                  type: integer
                                  format: int32
                                deprecated:
                                  type: object
                                  properties:
                                    hardware:
                                      type: integer
                                      format: int32
                                    hotfix:
                                      type: integer
                                      format: int32
                                    netaddr:
                                      type: integer
                                      format: int32
                                    netinfo:
                                      type: integer
                                      format: int32
                                    netproto:
                                      type: integer
                                      format: int32
                                    osinfo:
                                      type: integer
                                      format: int32
                                    package:
                                      type: integer
                                      format: int32
                                    port:
                                      type: integer
                                      format: int32
                                    process:
                                      type: integer
                                      format: int32
                    global:
                      type: integer
                      format: int32
                      description: "Time taken by all global queries (milliseconds)"
                    global_breakdown:
                      type: object
                      properties:
                        db:
                          type: object
                          description: "Time taken by all queries per operation (milliseconds)"
                          properties:
                            backup:
                              type: integer
                              format: int32
                            sql:
                              type: integer
                              format: int32
                        tables:
                          type: object
                          description: "Time taken by all queries per operation in tables (milliseconds)"
                          properties:
                            agent:
                              type: object
                              properties:
                                delete-agent:
                                  type: integer
                                  format: int32
                                disconnect-agents:
                                  type: integer
                                  format: int32
                                find-agent:
                                  type: integer
                                  format: int32
                                get-agent-info:
                                  type: integer
                                  format: int32
                                get-agents-by-connection-status:
                                  type: integer
                                  format: int32
                                get-all-agents:
                                  type: integer
                                  format: int32
                                get-groups-integrity:
                                  type: integer
                                  format: int32
                                insert-agent:
                                  type: integer
                                  format: int32
                                reset-agents-connection:
                                  type: integer
                                  format: int32
                                select-agent-group:
                                  type: integer
                                  format: int32
                                select-agent-name:
                                  type: integer
                                  format: int32
                                set-agent-groups:
                                  type: integer
                                  format: int32
                                sync-agent-groups-get:
                                  type: integer
                                  format: int32
                                sync-agent-info-get:
                                  type: integer
                                  format: int32
                                sync-agent-info-set":
                                  type: integer
                                  format: int32
                                update-agent-data:
                                  type: integer
                                  format: int32
                                update-agent-name:
                                  type: integer
                                  format: int32
                                update-connection-status:
                                  type: integer
                                  format: int32
                                update-keepalive:
                                  type: integer
                                  format: int32
                            belongs:
                              type: object
                              properties:
                                get-group-agents:
                                  type: integer
                                  format: int32
                                select-group-belong:
                                  type: integer
                                  format: int32
                            group:
                              type: object
                              properties:
                                delete-group:
                                  type: integer
                                  format: int32
                                find-group:
                                  type: integer
                                  format: int32
                                insert-agent-group:
                                  type: integer
                                  format: int32
                                select-groups:
                                  type: integer
                                  format: int32
                            labels:
                              type: object
                              properties:
                                get-labels:
                                  type: integer
                                  format: int32
                    mitre:
                      type: integer
                      format: int32
                      description: "Time taken by all mitre queries (milliseconds)"
                    mitre_breakdown:
                      type: object
                      properties:
                        db:
                          type: object
                          description: "Time taken by all queries per operation (milliseconds)"
                          properties:
                            sql:
                              type: integer
                              format: int32
                    task:
                      type: integer
                      format: int32
                      description: "Time taken by all task queries (milliseconds)"
                    task_breakdown:
                      type: object
                      properties:
                        db:
                          type: object
                          description: "Time taken by all queries per operation (milliseconds)"
                          properties:
                            sql:
                              type: integer
                              format: int32
                        tables:
                          type: object
                          description: "Time taken by all queries per operation in tables (milliseconds)"
                          properties:
                            tasks:
                              type: object
                              properties:
                                delete_old:
                                  type: integer
                                  format: int32
                                set_timeout:
                                  type: integer
                                  format: int32
                                upgrade:
                                  type: integer
                                  format: int32
                                upgrade_cancel_tasks:
                                  type: integer
                                  format: int32
                                upgrade_custom:
                                  type: integer
                                  format: int32
                                upgrade_get_status:
                                  type: integer
                                  format: int32
                                upgrade_result:
                                  type: integer
                                  format: int32
                                upgrade_update_status:
                                  type: integer
                                  format: int32
                    wazuhdb:
                      type: integer
                      format: int32
                      description: "Time taken by all wazuhdb queries (milliseconds)"
                    wazuhdb_breakdown:
                      type: object
                      properties:
                        db:
                          type: object
                          description: "Time taken by all queries per operation (milliseconds)"
                          properties:
                            remove:
                              type: integer
                              format: int32

    WazuhDaemonsStatus:
      type: object
      properties:
        wazuh-agentlessd:
          $ref: '#/components/schemas/DaemonStatus'
        wazuh-analysisd:
          $ref: '#/components/schemas/DaemonStatus'
        wazuh-authd:
          $ref: '#/components/schemas/DaemonStatus'
        wazuh-csyslogd:
          $ref: '#/components/schemas/DaemonStatus'
        wazuh-dbd:
          $ref: '#/components/schemas/DaemonStatus'
        wazuh-execd:
          $ref: '#/components/schemas/DaemonStatus'
        wazuh-integratord:
          $ref: '#/components/schemas/DaemonStatus'
        wazuh-logcollector:
          $ref: '#/components/schemas/DaemonStatus'
        wazuh-maild:
          $ref: '#/components/schemas/DaemonStatus'
        wazuh-monitord:
          $ref: '#/components/schemas/DaemonStatus'
        wazuh-remoted:
          $ref: '#/components/schemas/DaemonStatus'
        wazuh-reportd:
          $ref: '#/components/schemas/DaemonStatus'
        wazuh-syscheckd:
          $ref: '#/components/schemas/DaemonStatus'
        wazuh-apid:
          $ref: '#/components/schemas/DaemonStatus'
        wazuh-clusterd:
          $ref: '#/components/schemas/DaemonStatus'
        wazuh-db:
          $ref: '#/components/schemas/DaemonStatus'
        wazuh-modulesd:
          $ref: '#/components/schemas/DaemonStatus'

    WazuhInfo:
      type: object
      properties:
        path:
          type: string
          format: paths
          description: "Wazuh installation path"
        version:
          type: string
          description: "Wazuh version"
        type:
          type: string
          description: "Wazuh installation type"
          enum:
          - server
          - local
          - hybrid
        max_agents:
          type: string
          minimum: 0
          description: "Maximum number of agents that can be registered."
        openssl_support:
          type: string
        tz_offset:
          type: string
        tz_name:
          type: string

    WazuhManagerConfiguration:
      type: object
      properties:
        active-response:
          type: array
          items:
            type: object
        agentless:
          type: array
          items:
            type: object
        alerts:
          type: object
        auth:
          type: object
        cluster:
          type: object
        command:
          type: array
          items:
            type: object
        database_output:
          type: object
        email_alerts:
          type: object
        gcp-pubsub:
          type: object
        global:
          type: object
        integration:
          type: array
          items:
            type: object
        labels:
          type: object
        localfile:
          type: array
          items:
            type: object
        logging:
          type: object
        remote:
          type: array
          items:
            type: object
        reports:
          type: object
        rootcheck:
          type: object
        ruleset:
          type: object
        sca:
          type: object
        socket:
          type: object
        syscheck:
          type: object
        syslog_output:
          type: array
          items:
            type: object

        #Wodle sections inside WazuhConfiguration(ossec.conf)
        aws-s3:
          type: object
        azure-logs:
          type: object
        cis-cat:
          type: object
        docker-listener:
          type: object
        open-scap:
          type: object
        osquery:
          type: object
        syscollector:
          type: object

    WazuhStats:
      type: object
      items:
        type: object
        properties:
          alerts:
            type: array
            items:
              type: object
              properties:
                sigid:
                  type: integer
                  format: int32
                  description: "Rule ID that matched the event"
                level:
                  type: integer
                  format: int32
                  minimum: 0
                  maximum: 15
                  description: "Alert level"
                times:
                  type: integer
                  format: int32
                  description: "Number of times the alert was raised during the specified hour"
          events:
            type: integer
            format: int32
            description: "Number of events processed during the specified hour"
          firewall:
            type: integer
            format: int32
            description: "Number of firewall alerts raised during the specified hour"
          hour:
            type: integer
            format: int32
            description: "Hour of the day in 24h format"
          syscheck:
            type: integer
            format: int32
            description: "Number of syscheck alerts raised during the specified hour"
          totalAlerts:
            type: integer
            format: int32
            description: "Number of alerts raised during the specified hour"

    WazuhHourlyStats:
      type: object
      properties:
        averages:
          type: array
          maxLength: 24
          minLength: 24
          description: "Array containing the number of alerts for every hour"
          items:
            type: integer
        interactions:
          type: integer
          format: int32

    WazuhWeeklyStats:
      type: object
      properties:
        Sun:
          $ref: '#/components/schemas/WazuhHourlyStats'
        Mon:
          $ref: '#/components/schemas/WazuhHourlyStats'
        Tue:
          $ref: '#/components/schemas/WazuhHourlyStats'
        Wed:
          $ref: '#/components/schemas/WazuhHourlyStats'
        Thu:
          $ref: '#/components/schemas/WazuhHourlyStats'
        Fri:
          $ref: '#/components/schemas/WazuhHourlyStats'
        Sat:
          $ref: '#/components/schemas/WazuhHourlyStats'

    WazuhAnalysisdStats:
      type: object
      properties:
        alerts_queue_size:
          type: number
          format: float
          description: "Pending to write in disk alerts queue size"
        alerts_queue_usage:
          type: number
          format: float
          description: "If an event matches a rule, an alert is raised. The alerts are pushed to a _pending to write in
          disk alerts_ queue. This variable shows usage of that queue"
        alerts_written:
          type: number
          format: float
          description: "Total number of alerts written in disk during the last 5 seconds"
        archives_queue_size:
          type: number
          format: float
          description: "_Events to write in the archives.log_ queue size"
        archives_queue_usage:
          type: number
          format: float
          description: "_Events to write in the archives.log_ queue usage"
        event_queue_size:
          type: number
          format: float
          description: "Non-catalogued events queue size"
        event_queue_usage:
          type: number
          format: float
          description: "Same as `syscheck_queue_usage` but for events not catalogued in any of the previously mentioned
          queues"
        events_dropped:
          type: number
          format: float
          description: "Discarded events because they didn't match any rule in the ruleset"
        events_processed:
          type: number
          format: float
          description: "Total number of events processed (i.e. matched against Wazuh ruleset) in the last 5 seconds"
        events_received:
          type: number
          format: float
          description: "Events received in `analysisd` from the rest of modules in the last 5 seconds"
        firewall_queue_size:
          type: number
          format: float
          description: "_Events to write in the firewall log_ queue size"
        firewall_queue_usage:
          type: number
          format: float
          description: "Percentage of use in the queue of events to write in the firewall log"
        firewall_written:
          type: number
          format: float
          description: "Same as `alerts_written` but focusing on firewall alerts"
        fts_written:
          type: number
          format: float
          description: "Same as `alerts_written` but focusing in [FTS alerts]
          (https://documentation.wazuh.com/5.0/user-manual/ruleset/ruleset-xml-syntax/decoders.html?highlight=fts
          #fts)"
        hostinfo_queue_size:
          type: number
          format: float
          description: "Hostinfo events queue size"
        hostinfo_queue_usage:
          type: number
          format: float
          description: "Same as `syscheck_queue_usage` but for hostinfo events"
        other_events_decoded:
          type: number
          format: float
          description: "Same as `total_events_decoded` but for non-catalogued events"
        rootcheck_events_decoded:
          type: number
          format: float
          description: "Same as `total_events_decoded` but for rootcheck events"
        rootcheck_queue_size:
          type: number
          format: float
          description: "Rootcheck events queue size"
        rootcheck_queue_usage:
          type: number
          format: float
          description: "Same as `syscheck_queue_usage` but for rootcheck events"
        sca_events_decoded:
          type: number
          format: float
          description: "Same as `total_events_decoded` but for policy monitoring events"
        sca_queue_size:
          type: number
          format: float
          description: "Policy monitoring events queue size"
        sca_queue_usage:
          type: number
          format: float
          description: "Same as `syscheck_queue_usage` but for policy monitoring events"
        statistical_queue_size:
          type: number
          format: float
          description: "Stats log queue size"
        statistical_queue_usage:
          type: number
          format: float
          description: "Stats log queue usage"
        syscheck_events_decoded:
          type: number
          format: float
          description: "Same as `total_events_decoded` but for FIM events"
        syscheck_queue_size:
          type: number
          format: float
          description: "Syscheck events queue size"
        syscheck_queue_usage:
          type: number
          format: float
          description: "Percentage of use in the syscheck events queue pending to be decoded. Events are discarded when
          the queue is full"
        syscollector_events_decoded:
          type: number
          format: float
          description: "Same as `total_events_decoded` but for system inventory events"
        syscollector_queue_size:
          type: number
          format: float
          description: "System inventory events queue size"
        syscollector_queue_usage:
          type: number
          format: float
          description: "Same as `syscheck_queue_usage` but for system inventory events"
        total_events_decoded:
          type: number
          format: float
          description: "Total events decoded in the last 5 seconds. This number is not accumulative, the number in the
          following 5 seconds can be lower than the previous one"
        winevt_events_decoded:
          type: number
          format: float
          description: "Same as `total_events_decoded` but for Windows events"
        winevt_queue_size:
          type: number
          format: float
          description: "Windows events queue size"
        winevt_queue_usage:
          type: number
          format: float
          description: "Same as `syscheck_queue_usage` but for Windows events"

    WazuhRemotedStats:
      type: object
      properties:
        ctrl_msg_count:
          type: number
          format: float
          description: "Number of control messages received from all agents during the last five seconds"
        discarded_count:
          type: number
          format: float
          description: "Number of discarded events received from agents during the last five seconds"
        evt_count:
          type: number
          format: float
          description: "Number of events sent to analysisd during the last five seconds"
        sent_bytes:
          type: number
          format: float
          description: "Number of sent bytes to the agents during the last five seconds"
        queue_size:
          type: number
          format: float
          description: "Usage of the queue to storage events from agents"
        recv_bytes:
          type: number
          format: float
          description: "Number of received bytes from all agents during the last five seconds"
        tcp_sessions:
          type: number
          format: float
          description: "Number of TCP active sessions during the last five seconds"
        total_queue_size:
          type: number
          format: float
          description: "Total queue size to store events from agents"

    WazuhLogs:
      type: object
      properties:
        description:
          type: string
          description: "Log message"
        level:
          type: string
          description: "Log level"
          enum:
            - critical
            - debug
            - debug2
            - error
            - info
            - warning
        tag:
          type: string
          format: alphanumeric
          description: "Wazuh component that logged the event"
        timestamp:
          type: string
          format: date-time

    ValidationStatus:
      type: object
      properties:
        name:
          type: string
          description: "Node name"
        status:
          type: string
          description: "Status value"

    LogSummary:
      type: object
      properties:
        all:
          type: integer
          format: int32
          minimum: 0
        critical:
          type: integer
          format: int32
          minimum: 0
        debug:
          type: integer
          format: int32
          minimum: 0
        error:
          type: integer
          format: int32
          minimum: 0
        info:
          type: integer
          format: int32
          minimum: 0
        warning:
          type: integer
          format: int32
          minimum: 0

    WazuhLogsSummary:
      type: object
      properties:
          indexer-connector:
            $ref: '#/components/schemas/LogSummary'
          wazuh-agentlessd:
            $ref: '#/components/schemas/LogSummary'
          wazuh-analysisd:
            $ref: '#/components/schemas/LogSummary'
          wazuh-authd:
            $ref: '#/components/schemas/LogSummary'
          wazuh-csyslogd:
            $ref: '#/components/schemas/LogSummary'
          wazuh-dbd:
            $ref: '#/components/schemas/LogSummary'
          wazuh-execd:
            $ref: '#/components/schemas/LogSummary'
          wazuh-integratord:
            $ref: '#/components/schemas/LogSummary'
          wazuh-maild:
            $ref: '#/components/schemas/LogSummary'
          wazuh-monitord:
            $ref: '#/components/schemas/LogSummary'
          wazuh-logcollector:
            $ref: '#/components/schemas/LogSummary'
          wazuh-remoted:
            $ref: '#/components/schemas/LogSummary'
          wazuh-reportd:
            $ref: '#/components/schemas/LogSummary'
          rootcheck:
            $ref: '#/components/schemas/LogSummary'
          wazuh-syscheckd:
            $ref: '#/components/schemas/LogSummary'
          sca:
            $ref: '#/components/schemas/LogSummary'
          wazuh-db:
            $ref: '#/components/schemas/LogSummary'
          wazuh-modulesd:
            $ref: '#/components/schemas/LogSummary'
          wazuh-modulesd:agent-upgrade:
            $ref: '#/components/schemas/LogSummary'
          wazuh-modulesd:aws-s3:
            $ref: '#/components/schemas/LogSummary'
          wazuh-modulesd:azure-logs:
            $ref: '#/components/schemas/LogSummary'
          wazuh-modulesd:ciscat:
            $ref: '#/components/schemas/LogSummary'
          wazuh-modulesd:control:
            $ref: '#/components/schemas/LogSummary'
          wazuh-modulesd:command:
            $ref: '#/components/schemas/LogSummary'
          wazuh-modulesd:content_manager:
            $ref: '#/components/schemas/LogSummary'
          wazuh-modulesd:database:
            $ref: '#/components/schemas/LogSummary'
          wazuh-modulesd:docker-listener:
            $ref: '#/components/schemas/LogSummary'
          wazuh-modulesd:download:
            $ref: '#/components/schemas/LogSummary'
          wazuh-modulesd:oscap:
            $ref: '#/components/schemas/LogSummary'
          wazuh-modulesd:osquery:
            $ref: '#/components/schemas/LogSummary'
          wazuh-modulesd:syscollector:
            $ref: '#/components/schemas/LogSummary'
          wazuh-modulesd:vulnerability-scanner:
            $ref: '#/components/schemas/LogSummary'
          wazuh-modulesd:task-manager:
            $ref: '#/components/schemas/LogSummary'

    ConfirmationMessage:
      type: object
      properties:
        message:
          type: string
          description: "Confirmation message"

    ConfigurationValidation:
      type: object
      properties:
        status:
          type: string
          description: "Configuration status"
          enum:
          - OK

    LastScan:
      type: object
      properties:
        end:
          type: string
          nullable: true
          format: date-time
          description: "Date when the latest scan finished. If it is in progress, or no scans have been run, null will
          be returned"
        start:
          type: string
          nullable: true
          format: date-time
          description: "Date when the latest scan started. If no scans have been run, null will be returned"

    NewVersions:
      type: object
      properties:
        last_check_date:
          type: string
          description: "Datetime of the last query to the CTI service"
        current_version:
          type: string
          description: "Current version in the format vX.Y.Z"
        update_check:
          type: boolean
          description: "Flag that indicates if the service is enabled"
        last_available_major:
          type: object
          description: "Information about the most recent available major update"
          properties:
            tag:
              type: string
              description: "Version in the format vX.Y.Z"
            description:
              type: string
            title:
              type: string
            published_date:
              type: string
            semver:
              type: object
              properties:
                major:
                  type: integer
                  format: int32
                minor:
                  type: integer
                  format: int32
                patch:
                  type: integer
                  format: int32
        last_available_minor:
          type: object
          description: "Information about the most recent available minor update"
          properties:
            tag:
              type: string
              description: "Version in the format vX.Y.Z"
            description:
              type: string
            title:
              type: string
            published_date:
              type: string
            semver:
              type: object
              properties:
                major:
                  type: integer
                  format: int32
                minor:
                  type: integer
                  format: int32
                patch:
                  type: integer
                  format: int32
        last_available_patch:
          type: object
          description: "Information about the most recent available patch update"
          properties:
            tag:
              type: string
              description: "Version in the format vX.Y.Z"
            description:
              type: string
            title:
              type: string
            published_date:
              type: string
            semver:
              type: object
              properties:
                major:
                  type: integer
                  format: int32
                minor:
                  type: integer
                  format: int32
                patch:
                  type: integer
                  format: int32
        uuid:
          type: string
          description: "Identifier of the Wazuh instance"

    SecurityConfiguration:
      type: object
      minProperties: 1
      properties:
        auth_token_exp_timeout:
          description: "Time in seconds until the token expires"
          type: integer
          format: int32
          minimum: 30
          example: 900
        rbac_mode:
          description: "RBAC mode (white/black)"
          type: string
          enum: [white, black]
          example: white

    # SCA models
    SCAChecks:
      type: object
      properties:
        description:
          type: string
          description: "A description of what is being checked"
        directory:
          type: string
          description: "Analyzed directories"
        file:
          type: string
          description: "Analyzed file path"
        id:
          type: integer
          format: int32
          description: "Policy check ID. A policy contains multiple checks"
        policy_id:
          type: string
          description: "Scanned policy ID"
        process:
          type: string
          description: "Check whether a process is running or not. It's only returned when the checked process is
          running"
        rationale:
          type: string
          description: "Explain why this check is necessary"
        references:
          type: string
          description: "A link to a documentation page about the check"
        registry:
          type: string
          description: "Analyzed registry"
        remediation:
          type: string
          description: "Explain how to fix the check, this field is very useful in case the check failed"
        result:
          type: string
          description: "Check result"
          enum:
            - passed
            - failed
            - "not applicable"
        title:
          type: string
          description: "A brief description of what is being checked"
        condition:
          type: string
          description: "Specify how rule results are aggregated in order to calculate the final value of a check"
          enum:
            - all
            - any
            - none
    SCADatabase:
      type: object
      properties:
        description:
          type: string
          description: "Brief description of what the policy is checking"
        end_scan:
          type: string
          format: date-time
          description: "When the last scan finished"
        fail:
          type: integer
          format: int32
          description: "Number of failed checks. If this number is higher than 0 the host has a vulnerability"
        name:
          type: string
          description: "Policy name"
        pass:
          type: integer
          format: int32
          description: "Number of passed checks"
        policy_id:
          type: string
          description: "Policy ID"
        references:
          type: string
          description: "A link to a documentation page about the policy"
        score:
          type: integer
          format: int32
          description: "Percentage of passed checks"
        start_scan:
          type: string
          format: date-time
          description: "When the last scan started"

    # Orders models
    Order:
      type: object
      required:
        - source
        - user
        - target
        - action
        - timeout
        - status
        - order_id
        - request_id
      properties:
        source:
          type: string
          description: "Order source"
          enum:
          - "Users/Services"
          - "Engine"
          - "Content manager"
        user:
          type: string
        target:
          type: object
          required:
            - id
            - type
          properties:
            id:
              type: string
            type:
              type: string
              description: "Command target type"
              enum:
                - agent
                - group
                - server
        action:
          type: object
          required:
            - name
            - version
          properties:
            name:
              type: string
            version:
              type: string
            args:
              type: array
              description: "Order action arguments"
              items:
                type: string
        timeout:
          type: integer
          format: int32
        status:
          type: string
          description: "Order status"
          enum:
            - pending
            - sent
            - success
            - failure
        order_id:
          type: string
          format: alphanumeric_symbols
        request_id:
          type: string
          format: alphanumeric_symbols

  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
      description: "Intended method to get a token"
      x-basicInfoFunc: api.authentication.check_user
    jwt:
      type: http
      scheme: bearer
      bearerFormat: JWT
      x-bearerInfoFunc: api.authentication.decode_token

  parameters:
    agent_id:
      in: path
      name: agent_id
      description: "Agent ID. All possible values from 001 onwards"
      required: true
      schema:
        $ref: '#/components/schemas/AgentID'
    agent_name:
      in: query
      name: agent_name
      description: "Agent name. The special characters allowed are: '-','_','.' "
      required: true
      schema:
        type: string
        format: names
        maxLength: 128
    benchmark:
      in: query
      name: benchmark
      description: "Filter by benchmark type"
      schema:
        type: string
        format: alphanumeric
    command:
      in: query
      name: command
      description: "Filter by command"
      schema:
        type: string
        format: symbols_alphanumeric_param
    description:
      in: query
      name: description
      description: "Filter by policy description"
      schema:
        type: string
        format: alphanumeric_symbols
    directory:
      in: query
      name: directory
      description: "Filter by directory"
      schema:
        type: string
    downloadFile:
      in: path
      name: filename
      required: True
      description: "Filename to download"
      schema:
        type: string
        format: alphanumeric
    error:
      in: query
      name: error
      description: "Filter by encountered errors"
      schema:
        type: integer
        format: int32
        minimum: 0
    fail:
      in: query
      name: fail
      description: "Filter by failed checks"
      schema:
        type: integer
        format: int32
        minimum: 0
    fields:
      in: query
      name: fields
      description: "List of fields affecting the operation"
      schema:
        type: array
        items:
          type: string
          format: names
    filename:
      in: query
      name: filename
      description: "Filter by filename"
      schema:
        type: array
        items:
          type: string
          format: alphanumeric
    full_path_filter:
      in: query
      name: file
      description: "Filter by full path"
      schema:
        type: string
        format: paths
    file_name:
      in: path
      name: file_name
      description: "Filename"
      required: true
      schema:
        type: string
        format: alphanumeric
    file_format:
      in: query
      name: format
      description: "Filter by file format. For example 'deb' will output deb files"
      schema:
        type: string
        format: alphanumeric
    group_id:
      in: path
      name: group_id
      description: "Group ID. (Name of the group)"
      required: true
      schema:
        $ref: '#/components/schemas/GroupID'
    group_id_query:
      in: query
      name: group_id
      description: "Group ID. (Name of the group)"
      required: true
      schema:
        $ref: '#/components/schemas/GroupID'
    agent_group:
      in: query
      name: group
      description: "Filter by group of agents"
      schema:
        $ref: '#/components/schemas/GroupID'
    hash:
      in: query
      name: hash
      description: "Select algorithm to generate the returned checksums"
      schema:
        type: string
        enum:
          - md5
          - sha1
          - sha224
          - sha256
          - sha384
          - sha512
          - blake2b
          - blake2s
          - sha3_224
          - sha3_256
          - sha3_384
          - sha3_512
    limit:
      in: query
      name: limit
      description: "Maximum number of elements to return. Although up to 100.000 can be specified, it is recommended not to exceed 500 elements. Responses may be slower the more this number is exceeded. "
      schema:
        type: integer
        format: int32
        default: 500
        minimum: 1
        maximum: 100000
    log_lines:
      in: query
      name: limit
      description: "Maximum number of lines to return."
      schema:
        type: integer
        format: int32
        default: 500
        minimum: 1
        maximum: 500
    agents_list:
      in: query
      name: agents_list
      description: "List of agent IDs (separated by comma), all agents selected by default if not specified"
      schema:
        type: array
        items:
          $ref: '#/components/schemas/AgentID'
    agents_list_all:
      in: query
      name: agents_list
      description: "List of agent IDs (separated by comma), use the keyword `all` to select all agents"
      required: true
      schema:
        type: array
        items:
          $ref: '#/components/schemas/AgentIDListAll'
    groups_list:
      in: query
      name: groups_list
      description: "List of group IDs (separated by comma), all groups selected by default if not specified"
      schema:
        type: array
        items:
          $ref: '#/components/schemas/GroupID'
    groups_list_all:
      in: query
      name: groups_list
      description: "List of group IDs (separated by comma), use the keyword 'all' to select all groups"
      required: true
      schema:
        type: array
        items:
          $ref: '#/components/schemas/GroupIDListAll'
    node:
      in: query
      name: node
      description: "Show results filtered by node"
      schema:
        type: string
        format: alphanumeric
    nodes_list:
      in: query
      name: nodes_list
      description: "List of node IDs (separated by comma), all nodes selected by default if not specified"
      schema:
        type: array
        items:
          type: string
    module:
      in: query
      name: module
      description: "Show results filtered by module"
      schema:
        type: string
        format: alphanumeric
    name:
      in: query
      name: name
      description: "Filter by name"
      schema:
        type: string
        format: alphanumeric
    type:
      in: query
      name: type
      description: "Filter by name"
      schema:
        type: string
        format: alphanumeric
    notchecked:
      in: query
      name: notchecked
      description: "Filter by not checked"
      schema:
        type: integer
        format: int32
        minimum: 0
    offset:
      in: query
      name: offset
      description: "First element to return in the collection"
      schema:
        type: integer
        format: int32
        default: 0
        minimum: 0
    olderThanParam:
      in: query
      name: older_than
      description: "Filter out agents whose time lapse from last keep alive signal is longer than specified. Time in
      seconds, â€˜[n_days]dâ€™, â€˜[n_hours]hâ€™, â€˜[n_minutes]mâ€™ or â€˜[n_seconds]sâ€™. For never_connected agents, uses the
      register date. For example, `7d`, `10s` and `10` are valid values. If no time unit is specified, seconds are used"
      schema:
        type: string
        format: timeframe
    pass:
      in: query
      name: pass
      description: "Filter by passed checks"
      schema:
        type: integer
        format: int32
        minimum: 0
    pretty:
      in: query
      name: pretty
      description: "Show results in human-readable format"
      schema:
        type: boolean
        default: false
    process:
      in: query
      name: process
      description: "Filter by process name"
      schema:
        type: string
        format: alphanumeric
    profile:
      in: query
      name: profile
      description: "Filter by evaluated profile"
      schema:
        type: string
        format: alphanumeric
    policy_id:
      in: path
      name: policy_id
      description: "Filter by policy id"
      required: true
      schema:
        type: string
        format: alphanumeric
    policy_id_rbac:
      in: path
      name: policy_id
      description: "Specify a policy id"
      required: true
      schema:
        $ref: '#/components/schemas/Policy_id'
    policy_ids_rbac:
      in: query
      name: 'policy_ids'
      description: "List of policy IDs"
      schema:
        type: array
        items:
          $ref: '#/components/schemas/Policy_id'
    policy_ids_rbac_delete:
      in: query
      name: 'policy_ids'
      description: "List of policy IDs (separated by comma), use the keyword 'all' to select all policies"
      required: true
      schema:
        type: array
        items:
          $ref: '#/components/schemas/Policy_id_DELETE'
    policy_ids_rbac_required:
      in: query
      name: 'policy_ids'
      description: "List of policy IDs"
      required: true
      schema:
        type: array
        items:
          $ref: '#/components/schemas/Policy_id'
    endpoint:
      in: query
      name: endpoint
      description: "Look for the RBAC actions which are related to the specified endpoint"
      schema:
        type: string
    purge:
      in: query
      name: purge
      description: "Permanently delete an agent from the key store"
      schema:
        type: boolean
        default: false
    query:
      in: query
      name: q
      description: "Query to filter results by. For example q=&quot;status=active&quot;"
      schema:
        type: string
    rationale:
      in: query
      name: rationale
      description: "Filter by rationale"
      schema:
        type: string
        format: alphanumeric_symbols
    raw:
      in: query
      name: raw
      description: "Format response in plain text"
      required: False
      schema:
        type: boolean
    registry:
      in: query
      name: registry
      description: "Filter by registry"
      schema:
        type: string
        format: alphanumeric
    references:
      in: query
      name: references
      description: "Filter by references"
      schema:
        type: string
    remediation:
      in: query
      name: remediation
      description: "Filter by remediation"
      schema:
        type: string
        format: alphanumeric_symbols
    result:
      in: query
      name: result
      description: "Filter by result"
      schema:
        type: string
        format: alphanumeric
    condition:
      in: query
      name: condition
      description: "Filter by condition"
      schema:
        type: string
    role_id:
      in: path
      name: role_id
      description: "Specify a role ID"
      required: true
      schema:
        $ref: '#/components/schemas/Role_id'
    role_ids:
      in: query
      name: 'role_ids'
      description: "List of role IDs (separated by comma)"
      schema:
        type: array
        items:
          $ref: '#/components/schemas/Role_id'
    role_ids_delete:
      in: query
      name: 'role_ids'
      description: "List of role IDs (separated by comma), use the keyword 'all' to select all roles"
      required: true
      schema:
        type: array
        items:
          $ref: '#/components/schemas/Role_id_DELETE'
    role_ids_required:
      in: query
      name: 'role_ids'
      description: "List of role IDs (separated by comma)"
      required: True
      schema:
        type: array
        items:
          $ref: '#/components/schemas/Role_id_DELETE'
    security_rule_id:
      in: path
      name: 'rule_id'
      description: "Specify a rule ID"
      required: true
      schema:
        $ref: '#/components/schemas/Security_rule_id'
    security_rule_ids:
      in: query
      name: 'rule_ids'
      description: "List of rule IDs (separated by comma)"
      schema:
        type: array
        items:
          $ref: '#/components/schemas/Security_rule_id'
    security_rule_ids_required:
      in: query
      name: 'rule_ids'
      description: "List of rule IDs (separated by comma)"
      required: true
      schema:
        type: array
        items:
          $ref: '#/components/schemas/Security_rule_id'
    security_rule_ids_delete:
      in: query
      name: 'rule_ids'
      description: "List of rule IDs (separated by comma), use the keyword 'all' to select all rules"
      required: true
      schema:
        type: array
        items:
          $ref: '#/components/schemas/Security_rule_id_DELETE'
    security_position:
      in: query
      name: 'position'
      description: "Security position for roles/policies"
      required: False
      schema:
        type: integer
        minimum: 0
    reason:
      in: query
      name: reason
      description: "Filter by reason"
      schema:
        type: string
        format: alphanumeric_symbols
    score:
      in: query
      name: score
      description: "Filter by final score"
      schema:
        type: integer
        format: int32
        minimum: 0
    search:
      in: query
      name: search
      description: "Look for elements containing the specified string. To obtain a complementary search, use '-' at the
      beginning"
      schema:
        type: string
        format: search
    select:
      in: query
      name: select
      description: "Select which fields to return (separated by comma). Use '.' for nested fields. For example,
      '{field1: field2}' may be selected with 'field1.field2'"
      schema:
        type: array
        items:
          type: string
          format: names
    # It'd be more appropriate to be an array of strings, and separate the ascending or descending order in another param
    sort:
      in: query
      name: sort
      description: "Sort the collection by a field or fields (separated by comma). Use +/- at the beggining to list in
      ascending or descending order. Use '.' for nested fields. For example, '{field1: field2}' may be selected with
      'field1.field2'"
      schema:
        type: string
        format: sort
    status:
      in: query
      name: status
      description: "Filter by status"
      schema:
        type: string
        format: alphanumeric
    title:
      in: query
      name: title
      description: "Filter by title"
      schema:
        type: string
        format: alphanumeric_symbols
    allow_run_as:
      in: query
      name: allow_run_as
      description: "Value for the allow_run_as flag"
      schema:
        type: boolean
        default: false
    user_ids:
      in: query
      name: 'user_ids'
      description: "List of user IDs (separated by comma)"
      schema:
        type: array
        items:
          $ref: '#/components/schemas/User_id'
    user_ids_delete:
      in: query
      name: 'user_ids'
      description: "List of user IDs (separated by comma), use the keyword 'all' to select all users"
      required: true
      schema:
        type: array
        items:
          $ref: '#/components/schemas/User_id_DELETE'
    user_id_required:
      in: path
      name: 'user_id'
      description: "User ID"
      required: True
      schema:
        $ref: '#/components/schemas/User_id'
    unknown:
      in: query
      name: unknown
      description: "Filter by unknown results"
      schema:
        type: integer
        format: int32
    version:
      in: query
      name: version
      description: "Filter by agents version using one of the following formats: 'X.Y.Z', 'vX.Y.Z', 'wazuh X.Y.Z' or 'wazuh vX.Y.Z'. For example: '4.4.0'"
      schema:
        type: string
        format: alphanumeric
    wait_for_complete:
      in: query
      name: wait_for_complete
      description: "Disable timeout response"
      schema:
        type: boolean
        default: false
    node_type:
      in: query
      name: type
      description: "Filter by node type"
      schema:
        type: string
        enum:
        - worker
        - master
    node_id:
      in: path
      name: node_id
      description: "Cluster node name"
      required: true
      schema:
        type: string
        format: names
    node_name:
      in: query
      name: node_name
      description: "Filter by node name"
      schema:
        type: string
        format: names
    section:
      in: query
      name: section
      description: "Indicates the wazuh configuration section"
      schema:
        type: string
        enum:
        - active-response
        - agentless
        - alerts
        - auth
        - client
        - client_buffer
        - cluster
        - command
        - database_output
        - email_alerts
        - global
        - integration
        - labels
        - localfile
        - logging
        - remote
        - reports
        - rootcheck
        - sca
        - socket
        - syscheck
        - syslog_output
        - vulnerability-detection
        - indexer
        # Wodle sections
        - aws-s3
        - azure-logs
        - cis-cat
        - docker-listener
        - open-scap
        - osquery
        - syscollector
    field:
      in: query
      name: field
      description: "Indicate a section child."
      schema:
        type: string
        format: names
    tag:
      in: query
      name: tag
      description: "Wazuh component that logged the event"
      schema:
        type: string
        format: alphanumeric
    log_level:
      in: query
      name: level
      description: "Filter by log level"
      schema:
        type: string
        enum:
          - critical
          - debug
          - debug2
          - error
          - info
          - warning
    distinct:
      in: query
      name: distinct
      description: Look for distinct values.
      schema:
        type: boolean
        default: false
    os.full:
      in: query
      name: os.full
      description: "Filter by OS"
      schema:
        type: string
        format: alphanumeric_symbols
    remote.ip:
      in: query
      name: remote.ip
      description: "Filter by Remote IP"
      schema:
        type: string
        format: alphanumeric
    older_than:
      in: query
      name: older_than
      description: "Consider only agents whose last keep alive is older than the specified time frame. For
      never_connected agents, register date is considered instead of last keep alive. For example, `7d`, `10s` and `10`
      are valid values. When no time unit is specified, seconds are assumed. Use 0s to select all agents"
      schema:
        type: string
        format: timeframe
        default: 7d
    ip:
      in: query
      name: ip
      description: "Filter by the IP used by the agent to communicate with the manager. If it's not available, it will
      have the same value as registerIP"
      schema:
        type: string
        format: alphanumeric
    registerIP:
      in: query
      name: registerIP
      description: "Filter by the IP used when registering the agent"
      schema:
        type: string
        format: alphanumeric
    force_single_group:
      in: query
      name: force_single_group
      description: "Removes the agent from all groups to which it belongs and assigns it to the specified group"
      schema:
        type: boolean
    use_http:
      in: query
      name: use_http
      description: "Use http protocol. If it's false use https. By default the value is set to false"
      schema:
        type: boolean
        default: false
    force_query:
      in: query
      name: force_query
      description: "Force query to CTI service"
      schema:
        type: boolean
        default: false
    resource_list:
      in: query
      name: resource
      description: List of current RBAC's resources.
      schema:
        type: string
        enum:
          - '*:*'
          - 'agent:group'
          - 'agent:id'
          - 'group:id'
          - 'node:id'
          - 'policy:id'
          - 'role:id'
          - 'user:id'
    value.name:
      in: query
      name: value.name
      description: "Filter by value name"
      schema:
        type: string
        format: alphanumeric
    value.type:
      in: query
      name: value.type
      description: "Filter by value type"
      schema:
        type: string
        format: alphanumeric
    is_connected:
      in: query
      name: is_connected
      description: "Agent connection status"
      schema:
        type: boolean

tags:
  - name: API Info
    description: "Wazuh API information"
  - name: Agents
    description: "Agents management related operations"
  - name: Cluster
    description: "Wazuh cluster and nodes management"
  - name: Groups
    description: "Group of agents and centralized configurations"
  - name: Manager
    description: "Wazuh manager management"
  - name: Overview
    description: "Overview of Wazuh"
  - name: SCA
    description: "Policy monitoring"
  - name: Security
    description: "Roles administration and user authentication management"
  - name: Events
    description: "Ingestion endpoints"

security:
  - jwt: []

paths:
  /:
    get:
      tags:
        - API Info
      summary: 'Get API info'
      description: "Return basic information about the API"
      operationId: api.controllers.default_controller.default_info
      parameters:
        - $ref: '#/components/parameters/pretty'
      responses:
        '200':
          description: "API default information"
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/BasicInfo'
              example:
                title: "Wazuh API"
                api_version: "v4.5.0"
                revision: '40100'
                license_name: "GPL 2.0"
                license_url: "https://github.com/wazuh/wazuh/blob/v5.0.0/LICENSE"
                hostname: "wazuh"
                timestamp: "2019-04-02T08:08:11Z"

  /agents:
    delete:
      tags:
        - Agents
      summary: "Delete agents"
      description: "Delete all agents or a list of them based on optional criteria"
      operationId: api.controllers.agent_controller.delete_agents
      x-rbac-actions:
        - $ref: '#/x-rbac-catalog/actions/agent:delete'
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/agents_list_all'
        - $ref: '#/components/parameters/name'
        - $ref: '#/components/parameters/agent_group'
        - $ref: '#/components/parameters/type'
        - $ref: '#/components/parameters/version'
        - $ref: '#/components/parameters/olderThanParam'
        - $ref: '#/components/parameters/is_connected'
        - $ref: '#/components/parameters/remote.ip'
        - $ref: '#/components/parameters/os.full'
      responses:
        '200':
          description: "Delete agents"
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      allOf:
                        - $ref: '#/components/schemas/AllItemsResponseAgentIDs'
              example:
                data:
                  affected_items:
                    - '019008da-1575-7375-b54f-ef43e393517ef'
                    - '019008da-1575-7375-b54f-ef43e393517eg'
                    - '019008da-1575-7375-b54f-ef43e393517eh'
                  total_affected_items: 3
                  total_failed_items: 0
                  failed_items: []
                message: 'All selected agents were deleted'
                error: 0
        '400':
          $ref: '#/components/responses/ResponseError'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/PermissionDeniedResponse'
        '405':
          $ref: '#/components/responses/InvalidHTTPMethodResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
    get:
      tags:
        - Agents
      summary: "List agents"
      description: "Return information about all available agents or a list of them"
      operationId: api.controllers.agent_controller.get_agents
      x-rbac-actions:
        - $ref: '#/x-rbac-catalog/actions/agent:read'
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/agents_list'
        - $ref: '#/components/parameters/name'
        - $ref: '#/components/parameters/agent_group'
        - $ref: '#/components/parameters/type'
        - $ref: '#/components/parameters/version'
        - $ref: '#/components/parameters/olderThanParam'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/select'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/is_connected'
        - $ref: '#/components/parameters/remote.ip'
        - $ref: '#/components/parameters/os.full'
      responses:
        '200':
          description: "List of agents or error description"
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/AllItemsResponseAgents'
              example:
                data:
                  affected_items:
                    - id: '019008da-1575-7375-b54f-ef43e393517ef'
                      name: ac7cb188d538
                      groups: [default]
                      type: agent
                      version: v5.0.0
                      last_login: 2024-05-26T12:40:08Z
                      is_connected: true
                      host:
                        ip: 172.25.0.1
                        os:
                          full: Ubuntu 24.04.1 LTS (Noble Numbat)
                    - id: '019008da-1575-7375-b54f-ef43e393517eg'
                      name: bc7ch188d538
                      groups: [default]
                      type: agent
                      version: v5.0.0
                      last_login: 2024-05-26T12:40:08Z
                      is_connected: true
                      host:
                        ip: 172.25.0.2
                        os:
                          full: Ubuntu 24.04.1 LTS (Noble Numbat)
                    - id: '019008da-1575-7375-b54f-ef43e393517eh'
                      name: zc7c7188d538
                      groups: [default]
                      type: agent
                      version: v5.0.0
                      last_login: 2024-05-26T12:40:08Z
                      is_connected: true
                      host:
                        ip: 172.25.0.3
                        os:
                          full: Ubuntu 24.04.1 LTS (Noble Numbat)
                  total_affected_items: 3
                  total_failed_items: 0
                  failed_items: []
                message: 'All selected agents information was returned'
                error: 0
        '400':
          $ref: '#/components/responses/ResponseError'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/PermissionDeniedResponse'
        '405':
          $ref: '#/components/responses/InvalidHTTPMethodResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
    post:
      tags:
        - Agents
      summary: "Add agent"
      description: "Add a new agent"
      operationId: api.controllers.agent_controller.add_agent
      x-rbac-actions:
        - $ref: '#/x-rbac-catalog/actions/agent:create'
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AgentAddBody'
            example:
              id: 019008da-1575-7375-b54f-ef43e393517ef
              name: NewHost_2
              key: 7b8276c3bf96aff5709346d368f04fed
              groups: 
                - group1
              type: endpoint
              version: 5.0.0
              host:
                architecture: x86_64
                hostname: wazuh-agent
                ip:
                  - 127.0.0.1
                os:
                  name: Debian 12 "Bookworm"
                  platform: Linux
      responses:
        '201':
          description: "Empty response indicating the agent was registered successfully"
        '400':
          $ref: '#/components/responses/ResponseError'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/PermissionDeniedResponse'
        '405':
          $ref: '#/components/responses/InvalidHTTPMethodResponse'
        '406':
          $ref: '#/components/responses/WrongContentTypeResponse'
        '413':
          $ref: '#/components/responses/RequestTooLargeResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'

  /agents/{agent_id}/restart:
    put:
      tags:
        - Agents
      summary: "Restart agent"
      description: "Restart the specified agent"
      operationId: api.controllers.agent_controller.restart_agent
      x-rbac-actions:
        - $ref: '#/x-rbac-catalog/actions/agent:restart'
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/agent_id'
      responses:
        '200':
          description: "Agent restarted"
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/ItemAffected'
                example:
                  data:
                    affected_items:
                      - "0191be8b-dbdd-7ce7-afd2-4d81993f73c4"
                    total_affected_items: 1
                    total_failed_items: 0
                    failed_items: []
                  message: "Restart command was sent to all agents"
                  error: 0
        '400':
          $ref: '#/components/responses/ResponseError'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/PermissionDeniedResponse'
        '405':
          $ref: '#/components/responses/InvalidHTTPMethodResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'

  /agents/group:
    delete:
      tags:
        - Agents
      summary: "Remove agents from group"
      description: "Remove all agents assignment or a list of them from the specified group"
      operationId: api.controllers.agent_controller.delete_multiple_agent_single_group
      x-rbac-actions:
        - $ref: '#/x-rbac-catalog/actions/agent:modify_group'
        - $ref: '#/x-rbac-catalog/actions/group:modify_assignments'
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/agents_list_all'
        - $ref: '#/components/parameters/group_id_query'
      responses:
        '200':
          description: "Remove multiple agents assignment from a single group"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        allOf:
                          - $ref: '#/components/schemas/AllItemsResponseAgentIDs'
              example:
                data:
                  affected_items:
                    - '0191c764-831f-7ca5-b4e7-d5aec5fbbae2'
                    - '0191c764-831f-7830-aed7-dc45622ddb28'
                    - '0191c764-831f-726f-bcb1-63d2d37632e2'
                    - '0191c764-831f-7b11-9e25-983a0cdb643f'
                  total_affected_items: 4
                  total_failed_items: 0
                  failed_items: []
                message: "All selected agents were removed from group group1"
                error: 0
        '400':
          $ref: '#/components/responses/ResponseError'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/PermissionDeniedResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundResponse'
        '405':
          $ref: '#/components/responses/InvalidHTTPMethodResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
    put:
      tags:
        - Agents
      summary: "Assign agents to group"
      description: "Assign all agents or a list of them to the specified group"
      operationId: api.controllers.agent_controller.put_multiple_agent_single_group
      x-rbac-actions:
        - $ref: '#/x-rbac-catalog/actions/agent:modify_group'
        - $ref: '#/x-rbac-catalog/actions/group:modify_assignments'
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/agents_list'
        - $ref: '#/components/parameters/group_id_query'
        - $ref: '#/components/parameters/force_single_group'
      responses:
        '200':
          description: "Assign multiple agents to a single group"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        allOf:
                          - $ref: '#/components/schemas/AllItemsResponseAgentIDs'
              example:
                data:
                  affected_items:
                    - '0191c764-218c-773c-a032-4f68bbe29a33'
                    - '0191c764-218c-7cd9-81c6-429fd82db675'
                  failed_items:
                    - error:
                        code: 1701
                        message: Agent does not exist
                        remediation: Please, use `GET /agents?select=id,name` to find all available agents
                      id:
                        - '0191c764-218c-7d8b-9b8c-d60e7b81846d'
                  total_affected_items: 2
                  total_failed_items: 1
                  message: Some agents were not assigned to group2 and removed from the other groups
                  error: 2
        '400':
          $ref: '#/components/responses/ResponseError'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/PermissionDeniedResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundResponse'
        '405':
          $ref: '#/components/responses/InvalidHTTPMethodResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'

  /agents/reconnect:
    put:
      tags:
        - Agents
      summary: "Force reconnect agents"
      description: "Force reconnect all agents or a list of them"
      operationId: api.controllers.agent_controller.reconnect_agents
      x-rbac-actions:
        - $ref: '#/x-rbac-catalog/actions/agent:reconnect'
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/agents_list'
      responses:
        '200':
          description: "Agents reconnected"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/AllItemsResponseAgentIDs'
                example:
                  data:
                    affected_items:
                      - '001'
                      - '002'
                      - '003'
                    total_affected_items: 3
                    total_failed_items: 0
                    failed_items: []
                  message: "Force reconnect command was sent to all agents"
                  error: 0
        '400':
          $ref: '#/components/responses/ResponseError'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/PermissionDeniedResponse'
        '405':
          $ref: '#/components/responses/InvalidHTTPMethodResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'

  /agents/restart:
    put:
      tags:
        - Agents
      summary: "Restart agents"
      description: "Restart all agents or a list of them"
      operationId: api.controllers.agent_controller.restart_agents
      x-rbac-actions:
        - $ref: '#/x-rbac-catalog/actions/agent:restart'
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/agents_list'
      responses:
        '200':
          description: "Agents restarted"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                          $ref: '#/components/schemas/AllItemsResponseAgentIDs'
                example:
                  data:
                    affected_items:
                      - '0191be8b-dbdd-7ce7-afd2-4d81993f73c4'
                      - '0191bed5-688b-7c7c-8a65-564aca95ea0d'
                      - '0191bed5-90a2-7240-87e2-2399a08c959b'
                      - '0191bed5-cf10-7492-b69f-6de8ea3e3d59'
                    total_affected_items: 4
                    total_failed_items: 0
        '400':
          $ref: '#/components/responses/ResponseError'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/PermissionDeniedResponse'
        '405':
          $ref: '#/components/responses/InvalidHTTPMethodResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'

  /groups:
    delete:
      tags:
        - Groups
      summary: "Delete groups"
      description: "Delete all groups or a list of them"
      operationId: api.controllers.agent_controller.delete_groups
      x-rbac-actions:
        - $ref: '#/x-rbac-catalog/actions/group:delete'
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/groups_list_all'
      responses:
        '200':
          description: "Remove multiple group from multiple agents"
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      allOf:
                      - $ref: '#/components/schemas/AgentGroupDeleted'
              example:
                data:
                  affected_items:
                    - webserver
                    - dataserver
                  total_affected_items: 2
                  total_failed_items: 0
                  failed_items: []
                  message: "All selected groups were deleted"
                  error: 0
        '400':
          $ref: '#/components/responses/ResponseError'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/PermissionDeniedResponse'
        '405':
          $ref: '#/components/responses/InvalidHTTPMethodResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
    get:
      tags:
        - Groups
      summary: "Get groups"
      description: "Get information about all groups or a list of them. Returns a list containing basic information
      about each group such as number of agents belonging to the group and the checksums of the configuration and
      shared files"
      operationId: api.controllers.agent_controller.get_list_group
      x-rbac-actions:
        - $ref: '#/x-rbac-catalog/actions/group:read'
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/groups_list'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/hash'
        - $ref: '#/components/parameters/query'
        - $ref: '#/components/parameters/select'
        - $ref: '#/components/parameters/distinct'
      responses:
        '200':
          description: "List all groups"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/AllItemsResponseGroups'
              example:
                data:
                  affected_items:
                    - name: default
                      configSum: ab73af41699f13fdd81903b5f23d8d00
                    - name: dmz
                      configSum: cfbae9ecc10eb15f1b4fc736de6758cc
                    - name: pciserver
                      configSum: ab73af41699f13fdd81903b5f23d8d00
                  total_affected_items: 3
                  total_failed_items: 0
                  failed_items: []
                message: "All selected groups information was returned"
                error: 0
        '400':
          $ref: '#/components/responses/ResponseError'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/PermissionDeniedResponse'
        '405':
          $ref: '#/components/responses/InvalidHTTPMethodResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
    post:
      tags:
        - Groups
      summary: "Create a group"
      description: "Create a new group"
      operationId: api.controllers.agent_controller.post_group
      x-rbac-actions:
        - $ref: '#/x-rbac-catalog/actions/group:create'
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateGroupBody'
      responses:
        '200':
          description: "Add new agent"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                message: "Group 'NewGroup_1' created"
                error: 0
        '400':
          $ref: '#/components/responses/ResponseError'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/PermissionDeniedResponse'
        '405':
          $ref: '#/components/responses/InvalidHTTPMethodResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'

  /groups/{group_id}/agents:
    get:
      tags:
        - Groups
      summary: "Get agents in a group"
      description: "Return the list of agents that belong to the specified group"
      operationId: api.controllers.agent_controller.get_agents_in_group
      x-rbac-actions:
        - $ref: '#/x-rbac-catalog/actions/agent:read'
        - $ref: '#/x-rbac-catalog/actions/group:read'
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/group_id'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/select'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/query'
        - $ref: '#/components/parameters/distinct'
      responses:
        '200':
          description: "List of agents or error description"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/AllItemsResponseAgents'
              example:
                data:
                  affected_items:
                    - id: 0191bcd6-d5d9-7688-8e4e-a51caa5847a8
                      groups:
                        - default
                        - group1
                      name: b2497efbf876
                      type: endpoint
                      version: Wazuh v5.0.0
                      last_login: 2024-08-27T10:03:23Z
                    - id: 0191c761-fd0d-76e3-a0e2-016e9ea453cc
                      groups:
                        - default
                        - group2
                      name: 600e27371700
                      type: endpoint
                      version: Wazuh v5.0.0
                      last_login: 2024-08-27T09:23:52Z
                    - id: 01912d07-b9b4-7528-bdad-15da902d651c
                      groups:
                        - default
                        - group3
                      name: 4bdac19ce5e3
                      type: endpoint
                      version: Wazuh v5.0.0
                      last_login: 2024-08-27T12:16:44Z
                  total_affected_items: 3
                  total_failed_items: 0
                  failed_items: []
                message: "All selected agents information was returned"
                error: 0
        '400':
          $ref: '#/components/responses/ResponseError'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/PermissionDeniedResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundResponse'
        '405':
          $ref: '#/components/responses/InvalidHTTPMethodResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'

  /groups/{group_id}/configuration:
    get:
      tags:
        - Groups
      summary: "Get group configuration"
      description: "Return a group's configuration"
      operationId: api.controllers.agent_controller.get_group_config
      x-rbac-actions:
        - $ref: '#/x-rbac-catalog/actions/group:read'
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/group_id'
      responses:
        '200':
          description: "Get group configuration"
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      affected_items:
                        type: array
                        items:
                          $ref: '#/components/schemas/GroupConfiguration'
                      total_affected_items:
                        type: integer
                        format: int32
              example:
                data:
                  total_affected_items: 3
                  affected_items:
                    - filters:
                        name: agent_name
                      config:
                        localfile:
                          - location: "/var/log/my.log"
                            log_format: syslog
                    - filters:
                        os: Linux
                      config:
                        localfile:
                          - location: "/var/log/linux.log"
                            log_format: syslog
                    - filters:
                        profile: database
                      config:
                        localfile:
                          - location: "/var/log/database.log"
                            log_format: syslog
                error: 0
        '400':
          $ref: '#/components/responses/ResponseError'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/PermissionDeniedResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundResponse'
        '405':
          $ref: '#/components/responses/InvalidHTTPMethodResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
    put:
      tags:
        - Groups
      summary: "Update group configuration"
      description: "Update an specified group's configuration. This API call expects a full valid YAML file with the
      shared configuration syntax"
      operationId: api.controllers.agent_controller.put_group_config
      x-rbac-actions:
        - $ref: '#/x-rbac-catalog/actions/group:update_config'
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/group_id'
      requestBody:
        required: true
        content:
          application/x-yaml:
            schema:
              properties:
                tmp_file:
                  description: "File to update"
                  type: string
      responses:
        '200':
          description: "Upload configuration"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                message: Agent configuration was successfully updated
                error: 0
        '400':
          $ref: '#/components/responses/ResponseError'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/PermissionDeniedResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundResponse'
        '405':
          $ref: '#/components/responses/InvalidHTTPMethodResponse'
        '406':
          $ref: '#/components/responses/WrongContentTypeResponse'
        '413':
          $ref: '#/components/responses/RequestTooLargeResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'

  /cluster/nodes:
    get:
      tags:
        - Cluster
      summary: "Get nodes info"
      description: "Get information about all nodes in the cluster or a list of them"
      operationId: api.controllers.cluster_controller.get_cluster_nodes
      x-rbac-actions:
        - $ref: '#/x-rbac-catalog/actions/cluster:read'
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/select'
        - $ref: '#/components/parameters/node_type'
        - $ref: '#/components/parameters/nodes_list'
        - $ref: '#/components/parameters/query'
        - $ref: '#/components/parameters/distinct'
      responses:
        '200':
          description: "List of connected nodes"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/AllItemsResponseClusterNodes'
              example:
                data:
                  affected_items:
                    - name: master-node
                      type: master
                      version: 4.4.0
                      ip: wazuh-master
                    - name: worker1
                      type: worker
                      version: 4.4.0
                      ip: 172.26.0.7
                    - name: worker2
                      type: worker
                      version: 4.4.0
                      ip: 172.26.0.6
                  total_affected_items: 3
                  total_failed_items: 0
                  failed_items: []
                message: "All selected nodes information was returned"
                error: 0
        '400':
          $ref: '#/components/responses/ResponseError'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/PermissionDeniedResponse'
        '405':
          $ref: '#/components/responses/InvalidHTTPMethodResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'

  /cluster/healthcheck:
    get:
      tags:
        - Cluster
      summary: "Get nodes healthcheck"
      description: "Return cluster healthcheck information for all nodes or a list of them. Such information includes
      last keep alive, last synchronization time and number of agents reporting on each node"
      operationId: api.controllers.cluster_controller.get_healthcheck
      x-rbac-actions:
        - $ref: '#/x-rbac-catalog/actions/cluster:read'
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/nodes_list'
      responses:
        '200':
          description: "Health information for cluster nodes"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/AllItemsResponseNodeHealthcheck'
              example:
                data:
                  affected_items:
                    - info:
                        name: master-node
                        type: master
                        version: 4.4.0
                        ip: wazuh-master
                        n_active_agents: 5
                    - info:
                        name: worker1
                        type: worker
                        version: 4.4.0
                        ip: 172.21.0.7
                        n_active_agents: 3
                      status:
                        sync_integrity_free: true
                        last_check_integrity:
                          date_start_master: 2021-05-27T10:50:51.325656Z
                          date_end_master: 2021-05-27T10:50:51.342140Z
                        last_sync_integrity:
                          date_start_master: 2021-05-27T10:48:54.086973Z
                          tmp_date_start_master: 2021-05-27T10:48:54.086973Z
                          date_end_master: 2021-05-27T10:48:54.093328Z
                          total_extra_valid: 0
                          total_files:
                            missing: 2
                            extra: 0
                            extra_valid: 0
                            shared: 0
                        sync_agent_info_free: true
                        last_sync_agentgroup:
                            date_start: 2021-05-27T10:48:54.086973Z
                            date_end: 2021-05-27T10:49:52.075794Z
                            n_synced_chunks: 1
                        last_sync_full_agentgroup:
                            date_start: 2021-05-27T10:52:48.038573Z
                            date_end: 2021-05-27T10:53:23.057795Z
                            n_synced_chunks: 2
                        last_sync_agentinfo:
                          date_start_master: 2021-05-27T10:50:49.174463Z
                          date_end_master: 2021-05-27T10:50:49.175921Z
                          n_synced_chunks: 1
                        last_keep_alive: 2021-05-27T10:50:08.985208Z
                    - info:
                        name: worker2
                        type: worker
                        version: 4.4.0
                        ip: 172.21.0.6
                        n_active_agents: 1
                      status:
                        sync_integrity_free: true
                        last_check_integrity:
                          date_start_master: 2021-05-27T10:50:51.939323Z
                          date_end_master: 2021-05-27T10:50:51.955007Z
                        last_sync_integrity:
                          date_start_master: 2021-05-27T10:48:54.706395Z
                          tmp_date_start_master: 2021-05-27T10:48:54.706395Z
                          date_end_master: 2021-05-27T10:48:54.726944Z
                          total_extra_valid: 0
                          total_files:
                            missing: 2
                            extra: 0
                            extra_valid: 0
                            shared: 0
                        sync_agent_info_free: true
                        last_sync_agentgroup:
                          date_start: 2021-05-27T10:48:54.086973Z
                          date_end: 2021-05-27T10:49:52.075794Z
                          n_synced_chunks: 1
                        last_sync_full_agentgroup:
                          date_start: 2021-05-27T10:52:48.038573Z
                          date_end: 2021-05-27T10:53:23.057795Z
                          n_synced_chunks: 2
                        last_sync_agentinfo:
                          date_start_master: 2021-05-27T10:50:48.832800Z
                          date_end_master: 2021-05-27T10:50:48.833854Z
                          n_synced_chunks: 1
                        last_keep_alive: 2021-05-27T10:50:18.650204Z
                  total_affected_items: 3
                  total_failed_items: 0
                  failed_items: []
                message: "All selected nodes healthcheck information was returned"
                error: 0
        '400':
          $ref: '#/components/responses/ResponseError'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/PermissionDeniedResponse'
        '405':
          $ref: '#/components/responses/InvalidHTTPMethodResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'

  /cluster/status:
    get:
      tags:
        - Cluster
      summary: "Get cluster status"
      description: "Return information about the cluster status"
      operationId: api.controllers.cluster_controller.get_status
      x-rbac-actions:
        - $ref: '#/x-rbac-catalog/actions/cluster:status'
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
      responses:
        '200':
          description: "Cluster status"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - $ref: '#/components/schemas/ClusterStatus'
              example:
                data:
                  enabled: "yes"
                  running: "yes"
                error: 0
        '400':
          $ref: '#/components/responses/ResponseError'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/PermissionDeniedResponse'
        '405':
          $ref: '#/components/responses/InvalidHTTPMethodResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'

  /cluster/{node_id}/status:
    get:
      tags:
        - Cluster
      summary: "Get node status"
      description: "Return the status of all Wazuh daemons in node node_id"
      operationId: api.controllers.cluster_controller.get_status_node
      x-rbac-actions:
        - $ref: '#/x-rbac-catalog/actions/cluster:read'
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/node_id'
      responses:
        '200':
          description: "Node wazuh daemons statuses"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/WazuhDaemonsStatus'
              example:
                data:
                  affected_items:
                    - wazuh-agentlessd: stopped
                      wazuh-analysisd: running
                      wazuh-authd: stopped
                      wazuh-csyslogd: stopped
                      wazuh-dbd: stopped
                      wazuh-monitord: running
                      wazuh-execd: running
                      wazuh-integratord: stopped
                      wazuh-logcollector: running
                      wazuh-maild: stopped
                      wazuh-remoted: running
                      wazuh-reportd: stopped
                      wazuh-syscheckd: running
                      wazuh-apid: running
                      wazuh-clusterd: running
                      wazuh-db: running
                      wazuh-modulesd: running
                  total_affected_items: 1
                  total_failed_items: 0
                  failed_items: []
                message: "Processes status was successfully read in specified node"
                error: 0
        '400':
          $ref: '#/components/responses/ResponseError'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/PermissionDeniedResponse'
        '405':
          $ref: '#/components/responses/InvalidHTTPMethodResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'

  /cluster/{node_id}/info:
    get:
      tags:
        - Cluster
      summary: "Get node info"
      description: "Return basic information about a specified node such as version, compilation date, installation
      path"
      operationId: api.controllers.cluster_controller.get_info_node
      x-rbac-actions:
        - $ref: '#/x-rbac-catalog/actions/cluster:read'
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/node_id'
      responses:
        '200':
          description: "Node information"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/WazuhInfo'
              example:
                data:
                  affected_items:
                    - path: /var/ossec
                      version: v4.3.0
                      type: server
                      max_agents: unlimited
                      openssl_support: yes
                      tz_offset: +0000
                      tz_name: UTC
                  total_affected_items: 1
                  total_failed_items: 0
                  failed_items: []
                message: "Basic information was successfully read in specified node"
                error: 0
        '400':
          $ref: '#/components/responses/ResponseError'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/PermissionDeniedResponse'
        '405':
          $ref: '#/components/responses/InvalidHTTPMethodResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'

  /cluster/{node_id}/configuration:
    get:
      tags:
        - Cluster
      summary: "Get node config"
      description: "Return wazuh configuration used in node {node_id}. The 'section' and 'field' parameters will be
      ignored if 'raw' parameter is provided."
      operationId: api.controllers.cluster_controller.get_configuration_node
      x-rbac-actions:
        - $ref: '#/x-rbac-catalog/actions/cluster:read'
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/node_id'
        - $ref: '#/components/parameters/raw'
        - $ref: '#/components/parameters/section'
        - $ref: '#/components/parameters/field'
      responses:
        '200':
          description: "Node configuration"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/WazuhManagerConfiguration'
              example:
                data:
                  affected_items:
                    - global:
                        jsonout_output: yes
                        alerts_log: yes
                        logall: no
                        logall_json: no
                        email_notification: no
                        smtp_server: smtp.example.wazuh.com
                        email_from: wazuh@example.wazuh.com
                        email_to: recipient@example.wazuh.com
                        email_maxperhour: 12
                        email_log_source: alerts.log
                        agents_disconnection_time: "10m"
                        agents_disconnection_alert_time: 0
                        update_check: yes
                        white_list:
                          - 127.0.0.1
                          - ^localhost.localdomain$
                          - 80.58.61.250
                          - 80.58.61.254
                      alerts:
                        log_alert_level: "3"
                        email_alert_level: "12"
                      remote:
                        connection: secure
                        port: 1514
                        protocol:
                          - tcp
                        queue_size: 131072
                      rootcheck:
                        disabled: no
                        check_files: yes
                        check_trojans: yes
                        check_dev: yes
                        check_sys: yes
                        check_pids: yes
                        check_ports: yes
                        check_if: yes
                        frequency: 43200
                        rootkit_files:
                          - etc/rootcheck/rootkit_files.txt
                        rootkit_trojans:
                          - etc/rootcheck/rootkit_trojans.txt
                        skip_nfs: yes
                      cis-cat:
                        disabled: yes
                        timeout: 1800
                        interval: 1d
                        scan-on-start: yes
                        java_path: wodles/java
                        ciscat_path: wodles/ciscat
                      osquery:
                        disabled: yes
                        run_daemon: yes
                        log_path: /var/log/osquery/osqueryd.results.log
                        config_path: /etc/osquery/osquery.conf
                        add_labels: yes
                      syscollector:
                        disabled: no
                        interval: "1h"
                        scan_on_start: yes
                        hardware: yes
                        os: yes
                        network: yes
                        packages: yes
                        ports:
                          all: no
                          item: yes
                        processes: yes
                        synchronization:
                          max_eps: 10
                      sca:
                        enabled: yes
                        scan_on_start: yes
                        interval: "12h"
                        skip_nfs: yes
                      vulnerability-detection:
                        enabled: yes
                        index-status: yes
                        feed-update-interval: "60m"
                      indexer:
                        enabled: yes
                        hosts:
                          - http://127.0.0.1:9200
                        ssl:
                          certificate_authorities:
                            ca:
                              - /etc/filebeat/certs/root-ca.pem
                          certificate:
                            - /etc/filebeat/certs/filebeat.pem
                          key:
                            - /etc/filebeat/certs/filebeat-key.pem
                      syscheck:
                        disabled: no
                        frequency: 43200
                        scan_on_start: yes
                        alert_new_files: yes
                        auto_ignore:
                          frequency: 10
                          timeframe: 3600
                          item: no
                        directories:
                          - path: /etc
                          - path: /usr/bin
                          - path: /usr/sbin
                          - path: /bin
                          - path: /sbin
                          - path: /boot
                        ignore:
                          - /etc/mtab
                          - /etc/hosts.deny
                          - /etc/mail/statistics
                          - /etc/random-seed
                          - /etc/random.seed
                          - /etc/adjtime
                          - /etc/httpd/logs
                          - /etc/utmpx
                          - /etc/wtmpx
                          - /etc/cups/certs
                          - /etc/dumpdates
                          - /etc/svc/volatile
                          - type: sregex
                            item: ".log$|.swp$"
                        nodiff:
                          - /etc/ssl/private.key
                        skip_nfs: yes
                        skip_dev: yes
                        skip_proc: yes
                        skip_sys: yes
                        process_priority: 10
                        max_eps: 50
                        synchronization:
                          enabled: yes
                          interval: "5m"
                          max_eps: 10
                      command:
                        - name: disable-account
                          executable: disable-account
                          timeout_allowed: yes
                        - name: restart-wazuh
                          executable: restart-wazuh
                        - name: firewall-drop
                          executable: firewall-drop
                          timeout_allowed: yes
                        - name: host-deny
                          executable: host-deny
                          timeout_allowed: yes
                        - name: route-null
                          executable: route-null
                          timeout_allowed: yes
                        - name: win_route-null
                          executable: route-null.exe
                          timeout_allowed: yes
                        - name: netsh
                          executable: netsh.exe
                          timeout_allowed: yes
                      localfile:
                        - log_format: syslog
                          location: /var/ossec/logs/active-responses.log
                        - log_format: syslog
                          location: /var/log/dpkg.log
                        - log_format: command
                          command: "df -P"
                          frequency: 360
                        - log_format: full_command
                          command: "netstat -tulpn | sed 's/\\([[:alnum:]]\\+\\)\\ \\+[[:digit:]]\\+\\ \\+[[:digit:]
                          ]\\+\\ \\+\\(.*\\):\\([[:digit:]]*\\)\\ \\+\\([0-9\\.\\:\\*]\\+\\).\\+\\ \\([[:digit:]]*\\/[
                          [:alnum:]\\-]*\\).*/\\1 \\2 == \\3 == \\4 \\5/' | sort -k 4 -g | sed 's/ == \\(.*\\) ==/:\\1/'
                           | sed 1,2d"
                          alias: netstat listening ports
                          frequency: 360
                        - log_format: full_command
                          command: "last -n 20"
                          frequency: 360
                      ruleset:
                        rule_dir:
                          - ruleset/rules
                          - etc/rules
                        rule_exclude:
                          - 0215-policy_rules.xml
                      auth:
                        disabled: no
                        port: "1515"
                        use_source_ip: "no"
                        purge: "yes"
                        use_password: "no"
                        ciphers: "HIGH:!ADH:!EXP:!MD5:!RC4:!3DES:!CAMELLIA:@STRENGTH"
                        ssl_verify_host: "no"
                        ssl_manager_cert: "etc/sslmanager.cert"
                        ssl_manager_key: "etc/sslmanager.key"
                        ssl_auto_negotiate: "no"
                      cluster:
                        name: "wazuh"
                        node_name: "master-node"
                        node_type: "master"
                        port: "1516"
                        bind_addr: "localhost"
                        nodes:
                          - "wazuh-master"
                        hidden: "no"
                        cafile: "/var/wazuh_server/etc/sslmanager.ca"
                        certfile: "/var/wazuh_server/etc/sslmanager.cert"
                        keyfile: "/var/wazuh_server/etc/sslmanager.key"
                        keyfile_password: ""
                  total_affected_items: 1
                  total_failed_items: 0
                  failed_items: []
                message: "Configuration was successfully read in specified node"
                error: 0
        '400':
          $ref: '#/components/responses/ResponseError'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/PermissionDeniedResponse'
        '405':
          $ref: '#/components/responses/InvalidHTTPMethodResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
    put:
      tags:
        - Cluster
      summary: "Update node configuration"
      description: "Replace wazuh configuration for the given node with the data contained in the API request"
      operationId: api.controllers.cluster_controller.update_configuration
      x-rbac-actions:
        - $ref: '#/x-rbac-catalog/actions/cluster:update_config'
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/node_id'
      requestBody:
        description: "Content of the ossec.conf to be uploaded"
        required: true
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary
      responses:
        '200':
          description: "Confirmation message"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - $ref: '#/components/schemas/ConfirmationMessage'
              example:
                message: "Configuration was successfully updated"
                error: 0
        '400':
          $ref: '#/components/responses/ResponseError'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/PermissionDeniedResponse'
        '405':
          $ref: '#/components/responses/InvalidHTTPMethodResponse'
        '406':
          $ref: '#/components/responses/WrongContentTypeResponse'
        '413':
          $ref: '#/components/responses/RequestTooLargeResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'

  /cluster/{node_id}/logs:
    get:
      tags:
        - Cluster
      summary: "Get node logs"
      description: "Return the last 2000 wazuh log entries in the specified node"
      operationId: api.controllers.cluster_controller.get_log_node
      x-rbac-actions:
        - $ref: '#/x-rbac-catalog/actions/cluster:read'
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/node_id'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/log_lines'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/tag'
        - $ref: '#/components/parameters/log_level'
        - $ref: '#/components/parameters/query'
        - $ref: '#/components/parameters/select'
        - $ref: '#/components/parameters/distinct'
      responses:
        '200':
          description: "Wazuh node logs"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/AllItemsResponseWazuhLogs'
              example:
                data:
                  affected_items:
                    - timestamp: '2021-05-27T12:18:08Z'
                      tag: wazuh-remoted
                      level: debug
                      description: " TCP socket 20 already in keystore. Updating..."
                    - timestamp: '2021-05-27T12:18:08Z'
                      tag: wazuh-remoted
                      level: debug
                      description: " Agent '003' group is 'default'"
                    - timestamp: '2021-05-27T12:18:08Z'
                      tag: wazuh-remoted
                      level: debug
                      description: " Agent '003' with group 'default' file 'merged.mg' MD5
                        '9a016508cea1e997ab8569f5cfab30f5'"
                  total_affected_items: 3
                  total_failed_items: 0
                  failed_items: []
                message: "Logs were successfully read in specified node"
                error: 0
        '400':
          $ref: '#/components/responses/ResponseError'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/PermissionDeniedResponse'
        '405':
          $ref: '#/components/responses/InvalidHTTPMethodResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'

  /cluster/{node_id}/logs/summary:
    get:
      tags:
        - Cluster
      summary: "Get node logs summary"
      description: "Return a summary of the last 2000 wazuh log entries in the specified node"
      operationId: api.controllers.cluster_controller.get_log_summary_node
      x-rbac-actions:
        - $ref: '#/x-rbac-catalog/actions/cluster:read'
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/node_id'
      responses:
        '200':
          description: "Wazuh node logs summary"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/WazuhLogsSummary'
              example:
                data:
                  affected_items:
                    - indexer-connector:
                        all: 24
                        info: 0
                        error: 0
                        critical: 0
                        warning: 24
                        debug: 0
                    - wazuh-db:
                        info: 1
                        all: 4
                        critical: 0
                        debug: 0
                        error: 3
                        warning: 0
                    - wazuh-modulesd:content_manager:
                        info: 1
                        all: 1
                        critical: 0
                        debug: 0
                        error: 0
                        warning: 0
                    - wazuh-modulesd:router:
                        info: 1
                        all: 1
                        critical: 0
                        debug: 0
                        error: 0
                        warning: 0
                    - wazuh-remoted:
                        info: 744
                        all: 0
                        critical: 0
                        debug: 744
                        error: 0
                        warning: 0
                  total_affected_items: 5
                  failed_items: []
                  total_failed_items: 0
                message: "Log was successfully summarized in specified node"
                error: 0
        '400':
          $ref: '#/components/responses/ResponseError'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/PermissionDeniedResponse'
        '405':
          $ref: '#/components/responses/InvalidHTTPMethodResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'

  /cluster/restart:
    put:
      tags:
        - Cluster
      summary: "Restart nodes"
      description: "Restart all nodes in the cluster or a list of them"
      operationId: api.controllers.cluster_controller.put_restart
      x-rbac-actions:
        - $ref: '#/x-rbac-catalog/actions/cluster:read'
        - $ref: '#/x-rbac-catalog/actions/cluster:restart'
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/nodes_list'
      responses:
        '200':
          description: "List of affected nodes"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/AllItemsResponseNodeIDs'
                example:
                  data:
                    affected_items:
                      - 'master-node'
                      - 'worker1'
                      - 'worker2'
                    total_affected_items: 3
                    total_failed_items: 0
                    failed_items: []
                  message: "Restart request sent to all specified nodes"
                  error: 0
        '400':
          $ref: '#/components/responses/ResponseError'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/PermissionDeniedResponse'
        '405':
          $ref: '#/components/responses/InvalidHTTPMethodResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'

  /cluster/configuration/validation:
    get:
      tags:
        - Cluster
      summary: "Check nodes config"
      description: "Return whether the Wazuh configuration is correct or not in all cluster nodes or a list of them"
      operationId: api.controllers.cluster_controller.get_conf_validation
      x-rbac-actions:
        - $ref: '#/x-rbac-catalog/actions/cluster:read'
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/nodes_list'
      responses:
        '200':
          description: "Configuration status"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/AllItemsResponseValidationStatus'
                example:
                  data:
                    affected_items:
                      - name: master-node
                        status: OK
                      - name: worker1
                        status: OK
                      - name: worker2
                        status: OK
                    total_affected_items: 3
                    total_failed_items: 0
                    failed_items: []
                  message: "Validation was successfully checked in all nodes"
                  error: 0
        '400':
          $ref: '#/components/responses/ResponseError'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/PermissionDeniedResponse'
        '405':
          $ref: '#/components/responses/InvalidHTTPMethodResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'

  /manager/status:
    get:
      tags:
        - Manager
      summary: "Get status"
      description: "Return the status of all Wazuh daemons"
      operationId: api.controllers.manager_controller.get_status
      x-rbac-actions:
        - $ref: '#/x-rbac-catalog/actions/cluster:read'
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
      responses:
        '200':
          description: "Wazuh manager daemons statuses"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/WazuhDaemonsStatus'
              example:
                data:
                  affected_items:
                    - wazuh-agentlessd: "stopped"
                      wazuh-analysisd: "running"
                      wazuh-authd: "running"
                      wazuh-csyslogd: "stopped"
                      wazuh-dbd: "stopped"
                      wazuh-monitor": "running"
                      wazuh-execd: "running"
                      wazuh-integratord: "stopped"
                      wazuh-logcollector: "running"
                      wazuh-maild: "stopped"
                      wazuh-remoted: "running"
                      wazuh-reportd: "stopped"
                      wazuh-syscheckd: "running"
                      wazuh-clusterd: "running"
                      wazuh-modulesd: "running"
                      wazuh-db: "running"
                      wazuh-apid: "running"
                  total_affected_items: 1
                  total_failed_items: 0
                  failed_items: []
                message: "Processes status was successfully read in specified node"
                error: 0
        '400':
          $ref: '#/components/responses/ResponseError'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/PermissionDeniedResponse'
        '405':
          $ref: '#/components/responses/InvalidHTTPMethodResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'

  /manager/info:
    get:
      tags:
        - Manager
      summary: "Get information"
      description: "Return basic information such as version, compilation date, installation path"
      operationId: api.controllers.manager_controller.get_info
      x-rbac-actions:
        - $ref: '#/x-rbac-catalog/actions/cluster:read'
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
      responses:
        '200':
          description: "Manager information"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/WazuhInfo'
              example:
                data:
                  affected_items:
                    - path: /var/ossec
                      version: v4.3.0
                      type: server
                      max_agents: unlimited
                      openssl_support: yes
                      tz_offset: +0000
                      tz_name: UTC
                  total_affected_items: 1
                  total_failed_items: 0
                  failed_items: []
                message: "Basic information was successfully read in specified node"
                error: 0
        '400':
          $ref: '#/components/responses/ResponseError'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/PermissionDeniedResponse'
        '405':
          $ref: '#/components/responses/InvalidHTTPMethodResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'

  /manager/configuration:
    get:
      tags:
        - Manager
      summary: "Get configuration"
      description: "Return wazuh configuration used. The 'section' and 'field' parameters will be ignored if 'raw' parameter is provided."
      operationId: api.controllers.manager_controller.get_configuration
      x-rbac-actions:
        - $ref: '#/x-rbac-catalog/actions/cluster:read'
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/raw'
        - $ref: '#/components/parameters/section'
        - $ref: '#/components/parameters/field'
        - $ref: '#/components/parameters/distinct'
      responses:
        '200':
          description: "Wazuh configuration"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/WazuhManagerConfiguration'
            application/xml:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/WazuhManagerConfiguration'
              example:
                data:
                  affected_items:
                    - global:
                        jsonout_output: yes
                        alerts_log: yes
                        logall: no
                        logall_json: no
                        email_notification: no
                        smtp_server: smtp.example.wazuh.com
                        email_from: wazuh@example.wazuh.com
                        email_to: recipient@example.wazuh.com
                        email_maxperhour: 12
                        email_log_source: alerts.log
                        queue_size: 131072
                        update_check: yes
                        white_list:
                          - 127.0.0.1
                          - ^localhost.localdomain$
                          - 127.0.0.53
                      alerts:
                        log_alert_level: "3"
                        email_alert_level: "12"
                      cis-cat:
                        disabled: yes
                        timeout: 1800
                        interval: 1d
                        scan-on-start: yes
                        java_path: wodles/java
                        ciscat_path: wodles/ciscat
                      command:
                        - name: disable-account
                          executable: disable-account.sh
                          expect: user
                          timeout_allowed: yes
                        - name: restart-ossec
                          executable: restart-ossec.sh
                  total_affected_items: 1
                  failed_items: []
                  total_failed_items: 0
                message: "Configuration was successfully read"
                error: 0
        '400':
          $ref: '#/components/responses/ResponseError'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/PermissionDeniedResponse'
        '405':
          $ref: '#/components/responses/InvalidHTTPMethodResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
    put:
      tags:
        - Manager
      summary: "Update Wazuh configuration"
      description: "Replace Wazuh configuration with the data contained in the API request"
      operationId: api.controllers.manager_controller.update_configuration
      x-rbac-actions:
        - $ref: '#/x-rbac-catalog/actions/cluster:update_config'
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
      requestBody:
        description: "Content of the ossec.conf to be uploaded"
        required: true
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary
      responses:
        '200':
          description: "Confirmation message"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - $ref: '#/components/schemas/ConfirmationMessage'
              example:
                message: "Configuration was successfully updated"
                error: 0
        '400':
          $ref: '#/components/responses/ResponseError'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/PermissionDeniedResponse'
        '405':
          $ref: '#/components/responses/InvalidHTTPMethodResponse'
        '406':
          $ref: '#/components/responses/WrongContentTypeResponse'
        '413':
          $ref: '#/components/responses/RequestTooLargeResponse'
        '415':
          $ref: '#/components/responses/UnsupportedMediaTypeResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'

  /manager/daemons/stats:
    get:
      tags:
        - Manager
      summary: "Get Wazuh daemon stats"
      description: "Return Wazuh statistical information from specified daemons"
      operationId: api.controllers.manager_controller.get_daemon_stats
      x-rbac-actions:
        - $ref: '#/x-rbac-catalog/actions/cluster:read'
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/daemons_list'
      responses:
        '200':
          description: "Wazuh daemon stats"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/AllItemsResponseWazuhDaemonStats'
              example:
                data:
                  affected_items:
                    - uptime: 2022-07-21T10:09:20+00:00
                      timestamp: 2022-07-21T10:48:32+00:00
                      name: wazuh-remoted
                      metrics:
                        bytes:
                          received: 0
                          sent: 0
                        keys_reload_count: 0
                        messages:
                          received_breakdown:
                            control: 0
                            control_breakdown:
                              keepalive: 0
                              request: 0
                              shutdown: 0
                              startup: 0
                            dequeued_after: 0
                            discarded: 0
                            event: 0
                            ping: 0
                            unknown: 0
                          sent_breakdown:
                            ack: 0
                            ar: 0
                            discarded: 0
                            request: 0
                            sca: 0
                            shared: 0
                        queues:
                          received:
                            size: 131072
                            usage: 0
                        tcp_sessions: 0
                  total_affected_items: 1
                  failed_items: []
                  total_failed_items: 0
        '400':
          $ref: '#/components/responses/ResponseError'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/PermissionDeniedResponse'
        '405':
          $ref: '#/components/responses/InvalidHTTPMethodResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'

  /manager/stats:
    get:
      tags:
        - Manager
      summary: "Get stats"
      description: "Return Wazuh statistical information for the current or specified date"
      operationId: api.controllers.manager_controller.get_stats
      x-rbac-actions:
        - $ref: '#/x-rbac-catalog/actions/cluster:read'
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/date'
      responses:
        '200':
          description: "Wazuh stats"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/AllItemsResponseWazuhStats'
              example:
                data:
                  affected_items:
                    - hour: 15
                      alerts:
                        - sigid: 5303
                          level: 3
                          times: 1
                        - sigid: 5501
                          level: 3
                          times: 4
                        - sigid: 221
                          level: 0
                          times: 653
                      totalAlerts: 658
                      events: 4387
                      firewall: 0
                    - hour: 16
                      alerts:
                        - sigid: 5521
                          level: 0
                          times: 1
                        - sigid: 530
                          level: 0
                          times: 120
                      totalAlerts: 121
                      events: 4379
                      syscheck: 0
                      firewall: 0
                  total_affected_items: 2
                  failed_items: []
                  total_failed_items: 0
        '400':
          $ref: '#/components/responses/ResponseError'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/PermissionDeniedResponse'
        '405':
          $ref: '#/components/responses/InvalidHTTPMethodResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'

  /manager/stats/hourly:
    get:
      tags:
        - Manager
      summary: "Get stats hour"
      description: "Return Wazuh statistical information per hour. Each number in the averages field represents the
      average of alerts per hour"
      operationId: api.controllers.manager_controller.get_stats_hourly
      x-rbac-actions:
        - $ref: '#/x-rbac-catalog/actions/cluster:read'
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
      responses:
        '200':
          description: "Wazuh hourly stats"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/AllItemsResponseWazuhStats'
              example:
                data:
                  affected_items:
                    - averages:
                        - 40
                        - 24
                        - 67
                        - 234
                        - 66
                        - 24
                        - 634
                        - 66
                        - 123
                        - 56
                        - 65
                        - 23
                        - 666
                        - 233
                        - 646
                        - 44
                        - 64
                        - 99
                        - 34
                        - 235
                        - 653
                        - 25
                        - 65
                        - 23
                      interactions: 0
                  total_affected_items: 1
                  failed_items: []
                  total_failed_items: 0
        '400':
          $ref: '#/components/responses/ResponseError'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/PermissionDeniedResponse'
        '405':
          $ref: '#/components/responses/InvalidHTTPMethodResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'

  /manager/stats/weekly:
    get:
      tags:
        - Manager
      summary: "Get stats week"
      description: "Return Wazuh statistical information per week. Each number in the averages field represents the
      average of alerts per hour for that specific day"
      operationId: api.controllers.manager_controller.get_stats_weekly
      x-rbac-actions:
        - $ref: '#/x-rbac-catalog/actions/cluster:read'
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
      responses:
        '200':
          description: "Wazuh weekly stats"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/AllItemsResponseWazuhStats'
              example:
                data:
                  affected_items:
                    - Sun:
                        averages:
                        - 40
                        - 24
                        - 67
                        - 234
                        - 66
                        - 24
                        - 634
                        - 66
                        - 123
                        - 56
                        - 65
                        - 23
                        - 666
                        - 233
                        - 646
                        - 44
                        - 64
                        - 99
                        - 34
                        - 235
                        - 653
                        - 25
                        - 65
                        - 23
                        interactions: 0
                    - Mon:
                        averages:
                        - 40
                        - 24
                        - 67
                        - 234
                        - 66
                        - 24
                        - 634
                        - 66
                        - 123
                        - 56
                        - 65
                        - 23
                        - 666
                        - 233
                        - 646
                        - 44
                        - 64
                        - 99
                        - 34
                        - 235
                        - 653
                        - 25
                        - 65
                        - 23
                        interactions: 0
                    - Tue:
                        averages:
                        - 40
                        - 24
                        - 67
                        - 234
                        - 66
                        - 24
                        - 634
                        - 66
                        - 123
                        - 56
                        - 65
                        - 23
                        - 666
                        - 233
                        - 646
                        - 44
                        - 64
                        - 99
                        - 34
                        - 235
                        - 653
                        - 25
                        - 65
                        - 23
                        interactions: 0
                    - Wed:
                        averages:
                        - 40
                        - 24
                        - 67
                        - 234
                        - 66
                        - 24
                        - 634
                        - 66
                        - 123
                        - 56
                        - 65
                        - 23
                        - 666
                        - 233
                        - 646
                        - 44
                        - 64
                        - 99
                        - 34
                        - 235
                        - 653
                        - 25
                        - 65
                        - 23
                        interactions: 0
                    - Thu:
                        averages:
                        - 40
                        - 24
                        - 67
                        - 234
                        - 66
                        - 24
                        - 634
                        - 66
                        - 123
                        - 56
                        - 65
                        - 23
                        - 666
                        - 233
                        - 646
                        - 44
                        - 64
                        - 99
                        - 34
                        - 235
                        - 653
                        - 25
                        - 65
                        - 23
                        interactions: 0
                    - Fri:
                        averages:
                        - 40
                        - 24
                        - 67
                        - 234
                        - 66
                        - 24
                        - 634
                        - 66
                        - 123
                        - 56
                        - 65
                        - 23
                        - 666
                        - 233
                        - 646
                        - 44
                        - 64
                        - 99
                        - 34
                        - 235
                        - 653
                        - 25
                        - 65
                        - 23
                        interactions: 0
                    - Sat:
                        averages:
                        - 40
                        - 24
                        - 67
                        - 234
                        - 66
                        - 24
                        - 634
                        - 66
                        - 123
                        - 56
                        - 65
                        - 23
                        - 666
                        - 233
                        - 646
                        - 44
                        - 64
                        - 99
                        - 34
                        - 235
                        - 653
                        - 25
                        - 65
                        - 23
                        interactions: 0
                  total_affected_items: 7
                  failed_items: []
                  total_failed_items: 0
        '400':
          $ref: '#/components/responses/ResponseError'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/PermissionDeniedResponse'
        '405':
          $ref: '#/components/responses/InvalidHTTPMethodResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'

  /manager/stats/analysisd:
    get:
      tags:
        - Manager
      deprecated: true
      summary: "Get stats analysisd"
      description: "Return Wazuh analysisd statistical information"
      operationId: api.controllers.manager_controller.get_stats_analysisd
      x-rbac-actions:
        - $ref: '#/x-rbac-catalog/actions/cluster:read'
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
      responses:
        '200':
          description: "Wazuh analysisd stats"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/AllItemsResponseWazuhStats'
              example:
                data:
                  affected_items:
                    - total_events_decoded: 113.0
                      syscheck_events_decoded: 2.0
                      syscollector_events_decoded: 0.0
                      rootcheck_events_decoded: 4.0
                      sca_events_decoded: 2.0
                      winevt_events_decoded: 0.0
                      dbsync_messages_dispatched: 55.0
                      other_events_decoded: 50.0
                      events_processed: 57.0
                      events_received: 114.0
                      events_dropped: 0.0
                      alerts_written: 3.0
                      firewall_written: 0.0
                      fts_written: 0.0
                      syscheck_queue_usage: 0.0
                      syscheck_queue_size: 16384.0
                      syscollector_queue_usage: 0.0
                      syscollector_queue_size: 16384.0
                      rootcheck_queue_usage: 0.0
                      rootcheck_queue_size: 16384.0
                      sca_queue_usage: 0.0
                      sca_queue_size: 16384.0
                      hostinfo_queue_usage: 0.0
                      hostinfo_queue_size: 16384.0
                      winevt_queue_usage: 0.0
                      winevt_queue_size: 16384.0
                      dbsync_queue_usage: 0.0
                      dbsync_queue_size: 16384.0
                      upgrade_queue_usage: 0.0
                      upgrade_queue_size: 16384.0
                      event_queue_usage: 0.0
                      event_queue_size: 16384.0
                      rule_matching_queue_usage: 0.0
                      rule_matching_queue_size: 16384.0
                      alerts_queue_usage: 0.0
                      alerts_queue_size: 16384.0
                      firewall_queue_usage: 0.0
                      firewall_queue_size: 16384.0
                      statistical_queue_usage: 0.0
                      statistical_queue_size: 16384.0
                      archives_queue_usage: 0.0
                      archives_queue_size: 16384.0
                  total_affected_items: 1
                  failed_items: []
                  total_failed_items: 0
        '400':
          $ref: '#/components/responses/ResponseError'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/PermissionDeniedResponse'
        '405':
          $ref: '#/components/responses/InvalidHTTPMethodResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'

  /manager/stats/remoted:
    get:
      tags:
        - Manager
      deprecated: true
      summary: "Get stats remoted"
      description: "Return Wazuh remoted statistical information"
      operationId: api.controllers.manager_controller.get_stats_remoted
      x-rbac-actions:
        - $ref: '#/x-rbac-catalog/actions/cluster:read'
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
      responses:
        '200':
          description: "Wazuh remoted stats"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/AllItemsResponseWazuhStats'
              example:
                data:
                  affected_items:
                    - queue_size: 0.0
                      total_queue_size: 131072.0
                      tcp_sessions: 4.0
                      evt_count: 9089.0
                      ctrl_msg_count: 2099.0
                      discarded_count: 0.0
                      sent_bytes: 784598.0
                      recv_bytes: 4541779.0
                      dequeued_after_close: 0.0
                  total_affected_items: 0
                  failed_items: []
                  total_failed_items: 0
        '400':
          $ref: '#/components/responses/ResponseError'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/PermissionDeniedResponse'
        '405':
          $ref: '#/components/responses/InvalidHTTPMethodResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'

  /manager/logs:
    get:
      tags:
        - Manager
      summary: "Get logs"
      description: "Return the last 2000 wazuh log entries"
      operationId: api.controllers.manager_controller.get_log
      x-rbac-actions:
        - $ref: '#/x-rbac-catalog/actions/cluster:read'
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/log_lines'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/tag'
        - $ref: '#/components/parameters/log_level'
        - $ref: '#/components/parameters/query'
        - $ref: '#/components/parameters/select'
        - $ref: '#/components/parameters/distinct'
      responses:
        '200':
          description: "Wazuh logs"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/AllItemsResponseWazuhLogs'
              example:
                data:
                  affected_items:
                    - timestamp: '2020-04-15T14:47:54Z'
                      tag: wazuh-modulesd:syscollector
                      level: info
                      description: "Start syscheck scan"
                    - timestamp: '2020-04-15T14:47:51Z'
                      tag: wazuh-modulesd:syscollector
                      level: info
                      description: "Starting evaluation"
                    - timestamp: '2020-04-15T13:50:24Z'
                      tag: wazuh-maild
                      level: error
                      description: " (1263): Error Sending email to 69.172.200.109 (smtp server)"
                  total_affected_items: 3
                  failed_items: []
                  total_failed_items: 0
                message: Logs read successfully in specified node
                error: 0
        '400':
          $ref: '#/components/responses/ResponseError'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/PermissionDeniedResponse'
        '405':
          $ref: '#/components/responses/InvalidHTTPMethodResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'

  /manager/logs/summary:
    get:
      tags:
        - Manager
      summary: "Get logs summary"
      description: "Return a summary of the last 2000 wazuh log entries"
      operationId: api.controllers.manager_controller.get_log_summary
      x-rbac-actions:
        - $ref: '#/x-rbac-catalog/actions/cluster:read'
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
      responses:
        '200':
          description: "Wazuh logs summary"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/WazuhLogsSummary'
              example:
                data:
                  affected_items:
                    - indexer-connector:
                        all: 24
                        info: 0
                        error: 0
                        critical: 0
                        warning: 24
                        debug: 0
                    - wazuh-db:
                        info: 1
                        all: 4
                        critical: 0
                        debug: 0
                        error: 3
                        warning: 0
                    - wazuh-modulesd:content_manager:
                        info: 1
                        all: 1
                        critical: 0
                        debug: 0
                        error: 0
                        warning: 0
                    - wazuh-modulesd:router:
                        info: 1
                        all: 1
                        critical: 0
                        debug: 0
                        error: 0
                        warning: 0
                    - wazuh-remoted:
                        info: 744
                        all: 0
                        critical: 0
                        debug: 744
                        error: 0
                        warning: 0
                  total_affected_items: 5
                  failed_items: []
                  total_failed_items: 0
                message: "Log was successfully summarized in specified node"
                error: 0
        '400':
          $ref: '#/components/responses/ResponseError'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/PermissionDeniedResponse'
        '405':
          $ref: '#/components/responses/InvalidHTTPMethodResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'

  /manager/api/config:
    get:
      tags:
        - Manager
      summary: "Get API config"
      description: "Return the local API configuration in JSON format"
      operationId: api.controllers.manager_controller.get_api_config
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
      responses:
        '200':
          description: "Current API configuration"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                data:
                  affected_items:
                    - node_name: "manager"
                      node_api_config:
                        host: 0.0.0.0
                        port: 55000
                        drop_privileges: true
                        experimental_features: false
                        max_upload_size: 10485760
                        intervals:
                          request_timeout: 10
                        https:
                          enabled: true
                          key: "/var/ossec/api/configuration/ssl/server.key"
                          cert: "/var/ossec/api/configuration/ssl/server.crt"
                          use_ca: false
                          ca: "/var/ossec/api/configuration/ssl/ca.crt"
                          ssl_protocol: "auto"
                          ssl_ciphers: ""
                        logs:
                          level: info
                          format: plain
                          max_size:
                            enabled: false
                            size: 1M
                        cors:
                          enabled: false
                          source_route: "*"
                          expose_headers: "*"
                          allow_headers: "*"
                          allow_credentials: false
                        cache:
                          enabled: true
                          time: 0.75
                        access:
                          max_login_attempts: 50
                          block_time: 300
                          max_request_per_minute: 300
                        upload_configuration:
                          remote_commands:
                            localfile:
                              enabled: true
                              exceptions: []
                            wodle_commands:
                              enabled: true
                              exceptions: []
                          limits:
                            eps:
                              allow: true
                          agents:
                            allow_higher_versions: true
                  total_affected_items: 1
                  total_failed_items: 0
                  failed_items: []
                message: "API configuration was successfully read"
                error: 0
        '400':
          $ref: '#/components/responses/ResponseError'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/PermissionDeniedResponse'
        '405':
          $ref: '#/components/responses/InvalidHTTPMethodResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'

  /manager/restart:
    put:
      tags:
        - Manager
      summary: "Restart manager"
      description: "Restart the wazuh manager"
      operationId: api.controllers.manager_controller.put_restart
      x-rbac-actions:
        - $ref: '#/x-rbac-catalog/actions/cluster:read'
        - $ref: '#/x-rbac-catalog/actions/cluster:restart'
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
      responses:
        '200':
          description: "Confirmation message"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                data:
                  affected_items:
                    - master-node
                  total_affected_items: 1
                  failed_items: []
                  total_failed_items: 0
                message: "Restart request sent to all specified nodes"
                error: 0
        '400':
          $ref: '#/components/responses/ResponseError'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/PermissionDeniedResponse'
        '405':
          $ref: '#/components/responses/InvalidHTTPMethodResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'

  /manager/configuration/validation:
    get:
      tags:
        - Manager
      summary: "Check config"
      description: "Return whether the Wazuh configuration is correct"
      operationId: api.controllers.manager_controller.get_conf_validation
      x-rbac-actions:
        - $ref: '#/x-rbac-catalog/actions/cluster:read'
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
      responses:
        '200':
          description: "OK message if configuration is right"
          content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ConfigurationValidation'
                example:
                  data:
                    affected_items:
                      - name: "master-node"
                        status: "OK"
                    total_affected_items: 1
                    total_failed_items: 0
                    failed_items: []
                  message: "Validation was successfully checked in all nodes"
                  error: 0
        '400':
          $ref: '#/components/responses/ResponseError'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/PermissionDeniedResponse'
        '405':
          $ref: '#/components/responses/InvalidHTTPMethodResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'

  /manager/configuration/{component}/{configuration}:
    get:
      tags:
        - Manager
      summary: "Get active configuration"
      description: "Return the requested active configuration in JSON format"
      operationId: api.controllers.manager_controller.get_manager_config_ondemand
      x-rbac-actions:
        - $ref: '#/x-rbac-catalog/actions/cluster:read'
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/component'
        - $ref: '#/components/parameters/configuration'
      responses:
        '200':
          description: "Manager configuration on-demand"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
              example:
                data:
                  affected_items:
                    - name: wazuh
                      node_name: master-node
                      node_type: master
                      port: 1516
                      bind_addr: "localhost"
                      nodes:
                        - wazuh-master
                      hidden: no
                      cafile: "/var/wazuh_server/etc/sslmanager.ca"
                      certfile: "/var/wazuh_server/etc/sslmanager.cert"
                      keyfile: "/var/wazuh_server/etc/sslmanager.key"
                      keyfile_password: ""
                  total_affected_items: 1
                  total_failed_items: 0
                  failed_items: []
                message: "Active configuration was successfully read in specified node"
                error: 0
        '400':
          $ref: '#/components/responses/ResponseError'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/PermissionDeniedResponse'
        '405':
          $ref: '#/components/responses/InvalidHTTPMethodResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'

  /manager/version/check:
    get:
      tags:
        - Manager
      summary: "Check available updates"
      description: "Return if there is any available update"
      operationId: api.controllers.manager_controller.check_available_version
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/force_query'
      responses:
        '200':
          description: "Information about available new versions"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/NewVersions'
              example:
                data:
                  last_check_date: '2023-10-09T15:39:57.616301+00:00'
                  current_version: v4.8.0
                  update_check: true
                  last_available_major:
                    tag: v5.0.0
                    description: ""
                    title: Wazuh 5.0.0
                    published_date: '2023-10-05T12:48:00Z'
                    semver:
                      major: 5
                      minor: 0
                      patch: 0
                  last_available_minor:
                    tag: v4.9.1
                    description: ""
                    title: Wazuh 4.9.1
                    published_date: '2023-10-05T12:47:00Z'
                    semver:
                      major: 4
                      minor: 9
                      patch: 1
                  last_available_patch:
                    tag: v4.8.2
                    description: ""
                    title: Wazuh 4.8.2
                    published_date: '2023-10-05T12:46:00Z'
                    semver:
                      major: 4
                      minor: 8
                      patch: 2
                  uuid": "edc90f7f-fca4-446c-8985-e69520948e42"
                error: 0
        '400':
          $ref: '#/components/responses/ResponseError'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundResponse'
        '405':
          $ref: '#/components/responses/InvalidHTTPMethodResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'

  /security/user/authenticate:
    post:
      tags:
        - Security
      summary: "Login"
      description: "This method should be called to get an API token. This token will expire after
      auth_token_exp_timeout seconds (default: 900). This value can be changed using PUT /security/config"
      operationId: api.controllers.security_controller.login_user
      parameters:
        - $ref: '#/components/parameters/raw'
      security:
        - basicAuth: []
      responses:
        '200':
          description: "Login successful"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/Token'
              example:
                data:
                  token: "<generated_token>"
                  error: 0
            text/plain:
              schema:
                type: string
              example: "<generated_token>"
        '400':
          $ref: '#/components/responses/ResponseError'
        '401':
          $ref: '#/components/responses/InvalidCredentialsResponse'
        '405':
          $ref: '#/components/responses/InvalidHTTPMethodResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'

    delete:
      tags:
        - Security
      summary: "Logout current user"
      description: "This method should be called to invalidate all the current user's tokens"
      operationId: api.controllers.security_controller.logout_user
      responses:
        '200':
          description: "Logout successful"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                data:
                  message: "User wazuh was successfully logged out"
                  error: 0
        '400':
          $ref: '#/components/responses/ResponseError'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/PermissionDeniedResponse'
        '405':
          $ref: '#/components/responses/InvalidHTTPMethodResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'

  /security/user/authenticate/run_as:
    post:
      tags:
        - Security
      summary: "Login auth_context"
      description: "This method should be called to get an API token using an authorization context body. This token
      will expire after auth_token_exp_timeout seconds (default: 900). This value can be changed using PUT
      /security/config"
      operationId: api.controllers.security_controller.run_as_login
      parameters:
        - $ref: '#/components/parameters/raw'
      security:
        - basicAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
            example:
              name: "Initial_auth"
              auth:
                name: "Wazuh"
                office:
                  - "20"
                  - "21"
                  - "30"
      responses:
        '200':
          description: "Login successful"
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
              example:
                data:
                  token: "<generated_token>"
                  error: 0
        '400':
          $ref: '#/components/responses/ResponseError'
        '401':
          $ref: '#/components/responses/InvalidCredentialsResponse'
        '403':
          $ref: '#/components/responses/PermissionDeniedResponse'
        '405':
          $ref: '#/components/responses/InvalidHTTPMethodResponse'
        '413':
          $ref: '#/components/responses/RequestTooLargeResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'

  /security/users/me:
    get:
      tags:
        - Security
      summary: "Get current user info"
      description: "Get the information of the current user"
      operationId: api.controllers.security_controller.get_user_me
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
      responses:
        '200':
          description: "Information about current user"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/AllItemsResponseUsers'
                example:
                  data:
                    affected_items:
                      - id: 1
                        username: wazuh
                        allow_run_as: true
                        roles:
                          - id: 1
                            name: administrator
                            rule:
                              FIND:
                                r'^auth[a-zA-Z]+$':
                                  - full_admin
                            policies:
                              - id: 1
                                name: agents_all_resourceless
                                policy:
                                  actions:
                                    - agent:create
                                    - group:create
                                  resources:
                                    - "*:*:*"
                                  effect: allow
                              - id: 2
                                name: agents_all_agents
                                policy:
                                  actions:
                                    - agent:read
                                    - agent:delete
                                    - agent:modify_group
                                    - agent:reconnect
                                    - agent:restart
                                  resources:
                                    - agent:id:*
                                    - agent:group:*
                                  effect: allow
                    total_affected_items: 1
                    total_failed_items: 0
                    failed_items: []
                  message: "Current user information was returned"
                  error: 0
        '400':
          $ref: '#/components/responses/ResponseError'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/PermissionDeniedResponse'
        '405':
          $ref: '#/components/responses/InvalidHTTPMethodResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'

  /security/users/me/policies:
    get:
      tags:
        - Security
      summary: "Get current user processed policies"
      description: "Get the processed policies information for the current user"
      operationId: api.controllers.security_controller.get_user_me_policies
      parameters:
        - $ref: '#/components/parameters/pretty'
      responses:
        '200':
          description: "Information about current user processed policies"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"
              example:
                data:
                  agent:restart:
                    agent:id:*: allow
                  rbac_mode: black
                message: "Current user processed policies information was returned"
                error: 0
        '400':
          $ref: '#/components/responses/ResponseError'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '405':
          $ref: '#/components/responses/InvalidHTTPMethodResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'

  /security/user/revoke:
    put:
      tags:
        - Security
      summary: "Revoke JWT tokens"
      description: "This method should be called to revoke all active JWT tokens"
      operationId: api.controllers.security_controller.revoke_all_tokens
      responses:
        '200':
          description: "Tokens were successfully revoked"
          content:
            application/json:
              schema:
                type: object
              example:
                message: "Tokens were successfully revoked"
                error: 0
        '400':
          $ref: '#/components/responses/ResponseError'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/PermissionDeniedResponse'
        '405':
          $ref: '#/components/responses/InvalidHTTPMethodResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'

  /security/users/{user_id}/run_as:
    put:
      tags:
        - Security
      summary: "Enable/Disable run_as"
      description: "Modify a user's allow_run_as flag by specifying their ID"
      operationId: api.controllers.security_controller.edit_run_as
      x-rbac-actions:
        - $ref: '#/x-rbac-catalog/actions/security:edit_run_as'
      parameters:
        - $ref: '#/components/parameters/user_id_required'
        - $ref: '#/components/parameters/allow_run_as'
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
      responses:
        '200':
          description: "User's flag changed successfully"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/AllItemsResponseUsers'
                example:
                  data:
                    affected_items:
                      - id: 1
                        username: wazuh
                        allow_run_as: true
                        roles:
                          - 1
                    total_affected_items: 1
                    total_failed_items: 0
                    failed_items: []
                  message: "Parameter allow_run_as has been enabled for the user"
                  error: 0
        '400':
          $ref: '#/components/responses/ResponseError'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '405':
          $ref: '#/components/responses/InvalidHTTPMethodResponse'
        '406':
          $ref: '#/components/responses/WrongContentTypeResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'

  /security/actions:
    get:
      tags:
        - Security
      summary: 'List RBAC actions'
      description: 'Get all RBAC actions, including the potential related resources and endpoints.'
      operationId: api.controllers.security_controller.get_rbac_actions
      parameters:
        - $ref: '#/components/parameters/endpoint'
        - $ref: '#/components/parameters/pretty'
      responses:
        '200':
          description: "Return a list of RBAC actions"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
              example:
                agent:create:
                  description: Create new agents
                  resources:
                  - "*:*"
                  example:
                    actions:
                      - agent:create
                    resources:
                      - "*:*:*"
                    effect: allow
                  related_endpoints:
                    - POST /agents
        '400':
          $ref: '#/components/responses/ResponseError'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/PermissionDeniedResponse'
        '405':
          $ref: '#/components/responses/InvalidHTTPMethodResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'

  /security/resources:
    get:
      tags:
        - Security
      summary: 'List RBAC resources'
      description: 'This method should be called to get all current defined RBAC resources.'
      operationId: api.controllers.security_controller.get_rbac_resources
      parameters:
        - $ref: '#/components/parameters/resource_list'
        - $ref: '#/components/parameters/pretty'
      responses:
        '200':
          description: "Return all RBAC resources"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
              example:
                data:
                  "*:*":
                    description: "Resource applied in functions acting on resources that do not yet exist in the system.
                      We call these functions, resourceless functions"
                  "agent:group":
                    description: "Reference agents via group name (i.e. agent:group:web)"
                  "agent:id":
                    description: "Reference agents via agent ID (i.e. agent:id:001)"
                  "group:id":
                    description: "Reference agent groups via group ID (i.e. group:id:default)"
                  "node:id":
                    description: "Reference cluster nodes via node ID (i.e. node:id:worker1)"
                  "policy:id":
                    description: "Reference security policies via its id (i.e. policy:id:1)"
                  "role:id":
                    description: "Reference security roles via its id (i.e. role:id:1)"
                  "rule:id":
                    description: "Reference security rules via its id (i.e. rule:id:1)"
                  "user:id":
                    description: "Reference security users via its id (i.e. user:id:1)"
                error: 0
        '400':
          $ref: '#/components/responses/ResponseError'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/PermissionDeniedResponse'
        '405':
          $ref: '#/components/responses/InvalidHTTPMethodResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'

  /security/users:
    get:
      tags:
        - Security
      summary: "List users"
      description: "Get the information of a specified user"
      operationId: api.controllers.security_controller.get_users
      x-rbac-actions:
        - $ref: '#/x-rbac-catalog/actions/security:read'
      parameters:
        - $ref: '#/components/parameters/user_ids'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/select'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/query'
        - $ref: '#/components/parameters/distinct'
      responses:
        '200':
          description: "Information about user"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/AllItemsResponseUsers'
                example:
                  data:
                    affected_items:
                      - id: 3
                        username: administrator
                        allow_run_as: true
                        roles:
                          - 2
                      - id: 4
                        username: guest
                        allow_run_as: false
                        roles: []
                      - id: 5
                        username: normal
                        allow_run_as: false
                        roles:
                          - 4
                          - 5
                          - 6
                      - id: 6
                        username: ossec
                        allow_run_as: true
                        roles:
                          - 2
                          - 5
                      - username: python
                        allow_run_as: true
                        roles: []
                      - id: 7
                        username: rbac
                        allow_run_as: false
                        roles:
                          - 3
                          - 4
                          - 5
                      - id: 1
                        username: wazuh
                        allow_run_as: true
                        roles:
                          - 1
                      - id: 2
                        username: wazuh-wui
                        allow_run_as: true
                        roles: []
                    total_affected_items: 8
                    total_failed_items: 0
                    failed_items: []
                  message: "All specified users were returned"
                  error: 0
        '400':
          $ref: '#/components/responses/ResponseError'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/PermissionDeniedResponse'
        '405':
          $ref: '#/components/responses/InvalidHTTPMethodResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'

    post:
      tags:
        - Security
      summary: "Add user"
      description: "Add a new API user to the system"
      operationId: api.controllers.security_controller.create_user
      x-rbac-actions:
        - $ref: '#/x-rbac-catalog/actions/security:create_user'
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  minLength: 4
                  maxLength: 64
                  format: names
                password:
                  type: string
                  format: password
              required:
                - username
                - password
      responses:
        '200':
          description: "User created successfully"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/AllItemsResponseUsers'
                example:
                  data:
                    affected_items:
                      - id: 100
                        username: TestWazuh
                        allow_run_as: false
                        roles: []
                    total_affected_items: 1
                    total_failed_items: 0
                    failed_items: []
                  message: "User was successfully created"
                  error: 0
        '400':
          $ref: '#/components/responses/ResponseError'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '405':
          $ref: '#/components/responses/InvalidHTTPMethodResponse'
        '406':
          $ref: '#/components/responses/WrongContentTypeResponse'
        '413':
          $ref: '#/components/responses/RequestTooLargeResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'

    delete:
      tags:
        - Security
      summary: "Delete users"
      description: "Delete a list of users by specifying their IDs"
      operationId: api.controllers.security_controller.delete_users
      x-rbac-actions:
        - $ref: '#/x-rbac-catalog/actions/security:delete'
      parameters:
        - $ref: '#/components/parameters/user_ids_delete'
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
      responses:
        '200':
          description: "User deleted successful"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/AllItemsResponseUsers'
                example:
                  data:
                    affected_items:
                      - id: 100
                        username: new_user
                        allow_run_as: false
                        roles: []
                      - id: 102
                        username: another_user
                        allow_run_as: true
                        roles:
                          - 6
                    total_affected_items: 2
                    total_failed_items: 0
                    failed_items: []
                  message: "Users were successfully deleted"
                  error: 0
        '400':
          $ref: '#/components/responses/ResponseError'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '405':
          $ref: '#/components/responses/InvalidHTTPMethodResponse'
        '406':
          $ref: '#/components/responses/WrongContentTypeResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'

  /security/users/{user_id}:
    put:
      tags:
        - Security
      summary: "Update users"
      description: "Modify a user's password by specifying their ID"
      operationId: api.controllers.security_controller.update_user
      x-rbac-actions:
        - $ref: '#/x-rbac-catalog/actions/security:update'
      parameters:
        - $ref: '#/components/parameters/user_id_required'
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                password:
                  type: string
                  format: password
      responses:
        '200':
          description: "User updated successful"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/AllItemsResponseUsers'
                example:
                  data:
                    affected_items:
                      - id: 100
                        username: wazuh-test
                        allow_run_as: false
                        roles:
                          - 2
                    total_affected_items: 1
                    total_failed_items: 0
                    failed_items: []
                  message: "User was successfully updated"
                  error: 0
        '400':
          $ref: '#/components/responses/ResponseError'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '405':
          $ref: '#/components/responses/InvalidHTTPMethodResponse'
        '406':
          $ref: '#/components/responses/WrongContentTypeResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'

  /security/roles:
    get:
      tags:
        - Security
      summary: "List roles"
      description: "For a specific list, indicate the ids separated by commas. Example: ?role_ids=1,2,3"
      operationId: api.controllers.security_controller.get_roles
      x-rbac-actions:
        - $ref: '#/x-rbac-catalog/actions/security:read'
      parameters:
        - $ref: '#/components/parameters/role_ids'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/select'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/query'
        - $ref: '#/components/parameters/distinct'
      responses:
        '200':
          description: "Return a list of roles"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/AllItemsResponseRoles'
              example:
                data:
                  affected_items:
                    - id: 1
                      name: 'administrator'
                      policies:
                        - 1
                        - 2
                        - 3
                        - 6
                        - 7
                        - 8
                        - 29
                        - 30
                        - 12
                        - 14
                        - 15
                        - 18
                        - 19
                        - 21
                        - 23
                        - 24
                        - 16
                        - 25
                        - 27
                        - 28
                        - 33
                        - 34
                        - 35
                      users:
                        - 1
                        - 2
                      rules:
                        - 1
                        - 2
                    - id: 2
                      name: 'readonly'
                      policies:
                        - 4
                        - 5
                        - 12
                        - 31
                        - 32
                        - 13
                        - 17
                        - 20
                        - 22
                        - 16
                        - 25
                        - 26
                        - 28
                        - 35
                      users: []
                      rules: []
                  total_affected_items: 7
                  total_failed_items: 0
                  failed_items: []
                message: "All specified roles were returned"
                error: 0
        '400':
          $ref: '#/components/responses/ResponseError'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/PermissionDeniedResponse'
        '405':
          $ref: '#/components/responses/InvalidHTTPMethodResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'

    post:
      tags:
        - Security
      summary: "Add role"
      description: "Add a new role, all fields need to be specified"
      operationId: api.controllers.security_controller.add_role
      x-rbac-actions:
        - $ref: '#/x-rbac-catalog/actions/security:create'
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RolesRequest'
            example:
              name: "normal"
      responses:
        '200':
          description: "Return the information of the new role"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/AllItemsResponseRoles'
              example:
                data:
                  affected_items:
                    - id: 100
                      name: TestWazuhRole
                      policies: []
                      users: []
                      rules: []
                  total_affected_items: 1
                  total_failed_items: 0
                  failed_items: []
                message: "Role was successfully created"
                error: 0
        '400':
          $ref: '#/components/responses/ResponseError'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/PermissionDeniedResponse'
        '405':
          $ref: '#/components/responses/InvalidHTTPMethodResponse'
        '406':
          $ref: '#/components/responses/WrongContentTypeResponse'
        '413':
          $ref: '#/components/responses/RequestTooLargeResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'

    delete:
      tags:
        - Security
      summary: "Delete roles"
      description: "Policies linked to roles are not going to be removed"
      operationId: api.controllers.security_controller.remove_roles
      x-rbac-actions:
        - $ref: '#/x-rbac-catalog/actions/security:delete'
      parameters:
        - $ref: '#/components/parameters/role_ids_delete'
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
      responses:
        '200':
          description: "Remove result"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/AllItemsResponseRoles'
              example:
                data:
                  affected_items:
                    - id: 4
                      name: administrator
                      policies:
                        - 4
                        - 5
                      rules:
                        - 8
                      users:
                        - 101
                        - 104
                  total_affected_items: 1
                  total_failed_items: 0
                  failed_items: []
                message: "All specified roles were deleted"
                error: 0

        '400':
          $ref: '#/components/responses/ResponseError'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/PermissionDeniedResponse'
        '405':
          $ref: '#/components/responses/InvalidHTTPMethodResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'

  /security/roles/{role_id}:
    put:
      tags:
        - Security
      summary: "Update role"
      description: "Modify a role, cannot modify associated policies in this endpoint, at least one property must be
      indicated"
      operationId: api.controllers.security_controller.update_role
      x-rbac-actions:
        - $ref: '#/x-rbac-catalog/actions/security:update'
      parameters:
        - $ref: '#/components/parameters/role_id'
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RolesRequest_no_required'
            example:
              name: "normal"
      responses:
        '200':
          description: "Information of role modified"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/AllItemsResponseRoles'
              example:
                data:
                  affected_items:
                    - id: 5
                      name: normal8
                      policies: []
                      rules:
                        - 100
                      users: []
                  total_affected_items: 1
                  total_failed_items: 0
                  failed_items: []
                message: "Role was successfully updated"
                error: 0
        '400':
          $ref: '#/components/responses/ResponseError'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/PermissionDeniedResponse'
        '405':
          $ref: '#/components/responses/InvalidHTTPMethodResponse'
        '406':
          $ref: '#/components/responses/WrongContentTypeResponse'
        '413':
          $ref: '#/components/responses/RequestTooLargeResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'

  /security/rules:
    get:
      tags:
        - Security
      summary: "List security rules"
      description: "Get a list of security rules from the system or all of them. These rules must be mapped with roles
      to obtain certain access privileges. For a specific list, indicate the ids separated by commas.
      Example: ?rule_ids=1,2,3"
      operationId: api.controllers.security_controller.get_rules
      x-rbac-actions:
        - $ref: '#/x-rbac-catalog/actions/security:read'
      parameters:
        - $ref: '#/components/parameters/security_rule_ids'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/select'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/query'
        - $ref: '#/components/parameters/distinct'
      responses:
        '200':
          description: "Return a list of security rules"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/AllItemsResponseRoles'
              example:
                data:
                  affected_items:
                    - id: 1
                      name: wui_elastic_admin
                      rule:
                        FIND:
                          username: elastic
                      roles:
                        - 1
                    - id: 2
                      name: wui_opendistro_admin
                      rule:
                        FIND:
                          username: admin
                      roles:
                        - 1
                  total_affected_items: 2
                  total_failed_items: 0
                  failed_items: []
                message: "All specified security rules were returned"
                error: 0
        '400':
          $ref: '#/components/responses/ResponseError'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/PermissionDeniedResponse'
        '405':
          $ref: '#/components/responses/InvalidHTTPMethodResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'

    post:
      tags:
        - Security
      summary: "Add security rule"
      description: "Add a new security rule"
      operationId: api.controllers.security_controller.add_rule
      x-rbac-actions:
        - $ref: '#/x-rbac-catalog/actions/security:create'
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecurityRulesRequest'
            example:
              name:
                "New_Rule"
              rule:
                MATCH:
                  definition: "normalRule"
      responses:
        '200':
          description: "Return the information of the new security rule"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/AllItemsResponseRoles'
              example:
                data:
                  affected_items:
                    - id: 100
                      name: "TestWazuhRule"
                      rule:
                        MATCH:
                          definition: "test_rule"
                      roles: []
                  total_affected_items: 1
                  total_failed_items: 0
                  failed_items: []
                message: "Security rule was successfully created"
                error: 0
        '400':
          $ref: '#/components/responses/ResponseError'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/PermissionDeniedResponse'
        '405':
          $ref: '#/components/responses/InvalidHTTPMethodResponse'
        '406':
          $ref: '#/components/responses/WrongContentTypeResponse'
        '413':
          $ref: '#/components/responses/RequestTooLargeResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'

    delete:
      tags:
        - Security
      summary: "Delete security rules"
      description: "Delete a list of security rules or all security rules in the system, roles linked to rules are not
      going to be deleted"
      operationId: api.controllers.security_controller.remove_rules
      x-rbac-actions:
        - $ref: '#/x-rbac-catalog/actions/security:delete'
      parameters:
        - $ref: '#/components/parameters/security_rule_ids_delete'
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
      responses:
        '200':
          description: "Remove result"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/AllItemsResponseRoles'
              example:
                data:
                  affected_items:
                    - id: 100
                      name: "TestWazuhRule"
                      rule:
                        MATCH:
                          definition: "test_rule"
                      roles: []
                  total_affected_items: 1
                  total_failed_items: 0
                  failed_items: []
                message: "All specified security rules were deleted"
                error: 0
        '400':
          $ref: '#/components/responses/ResponseError'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/PermissionDeniedResponse'
        '405':
          $ref: '#/components/responses/InvalidHTTPMethodResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'

  /security/rules/{rule_id}:
    put:
      tags:
        - Security
      summary: "Update security rule"
      description: "Modify a security rule by specifying its ID"
      operationId: api.controllers.security_controller.update_rule
      x-rbac-actions:
        - $ref: '#/x-rbac-catalog/actions/security:update'
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/security_rule_id'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecurityRulesRequest_no_required'
            example:
              name: "new_name"
              rule:
                MATCH:
                  definition: "normalRule"
      responses:
        '200':
          description: "Security rule updated successfully"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/AllItemsResponseUsers'
                example:
                  data:
                    affected_items:
                      - id: 100
                        name: "TestWazuhRule"
                        rule:
                          MATCH:
                            definition: "test_rule_updated"
                        roles: []
                    total_affected_items: 1
                    total_failed_items: 0
                    failed_items: []
                  message: "Security rule was successfully updated"
                  error: 0
        '400':
          $ref: '#/components/responses/ResponseError'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '405':
          $ref: '#/components/responses/InvalidHTTPMethodResponse'
        '406':
          $ref: '#/components/responses/WrongContentTypeResponse'
        '413':
          $ref: '#/components/responses/RequestTooLargeResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'

  /security/policies:
    get:
      tags:
        - Security
      summary: "List policies"
      description: "Get all policies in the system, including the administrator policy"
      operationId: api.controllers.security_controller.get_policies
      x-rbac-actions:
        - $ref: '#/x-rbac-catalog/actions/security:read'
      parameters:
        - $ref: '#/components/parameters/policy_ids_rbac'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/select'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/query'
        - $ref: '#/components/parameters/distinct'
      responses:
        '200':
          description: "Return a list of policies"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/AllItemsResponsePolicies'
              example:
                data:
                  affected_items:
                    - id: 1
                      name: agents_all_resourceless
                      policy:
                        actions:
                          - "agent:create"
                          - "group:create"
                        resources:
                          - "*:*:*"
                        effect: allow
                      roles:
                        - 1
                        - 5
                    - id: 2
                      name: agents_all_agents
                      policy:
                        actions:
                          - "agent:read"
                          - "agent:delete"
                          - "agent:modify_group"
                          - "agent:reconnect"
                          - "agent:restart"
                        resources:
                          - "agent:id:*"
                          - "agent:id:*"
                        effect: allow
                      roles:
                        - 1
                        - 5
                  total_affected_items: 35
                  total_failed_items: 0
                  failed_items: []
                message: "All specified policies were returned"
                error: 0
        '400':
          $ref: '#/components/responses/ResponseError'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/PermissionDeniedResponse'
        '405':
          $ref: '#/components/responses/InvalidHTTPMethodResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'

    post:
      tags:
        - Security
      summary: "Add policy"
      description: "Add a new policy, all fields need to be specified"
      operationId: api.controllers.security_controller.add_policy
      x-rbac-actions:
        - $ref: '#/x-rbac-catalog/actions/security:create'
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PoliciesRequest'
            example:
              name: 'normal_policy'
              policy:
                actions:
                  - "agent:delete"
                resources:
                  - "agent:id:001"
                  - "agent:id:002"
                  - "agent:id:003"
                effect: "allow"
      responses:
        '200':
          description: "Add a policy"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/AllItemsResponsePolicies'
              example:
                data:
                  affected_items:
                    - id: 100
                      name: "TestWazuhPolicy"
                      policy:
                        actions:
                          - "security:delete"
                        resources:
                          - "user:id:*"
                        effect: deny
                      roles: []
                  total_affected_items: 1
                  total_failed_items: 0
                  failed_items: []
                message: "Policy was successfully created"
                error: 0
        '400':
          $ref: '#/components/responses/ResponseError'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/PermissionDeniedResponse'
        '405':
          $ref: '#/components/responses/InvalidHTTPMethodResponse'
        '406':
          $ref: '#/components/responses/WrongContentTypeResponse'
        '413':
          $ref: '#/components/responses/RequestTooLargeResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'

    delete:
      tags:
        - Security
      summary: "Delete policies"
      description: "Delete a list of policies or all policies in the system, roles linked to policies are not going to
      be removed"
      operationId: api.controllers.security_controller.remove_policies
      x-rbac-actions:
        - $ref: '#/x-rbac-catalog/actions/security:delete'
      parameters:
        - $ref: '#/components/parameters/policy_ids_rbac_delete'
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
      responses:
        '200':
          description: "Operation result"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/AllItemsResponsePolicies'
              example:
                data:
                  affected_items:
                    - id: 100
                      name: "TestWazuhPolicy"
                      policy:
                        actions:
                          - "security:delete"
                        resources:
                          - "user:id:*"
                        effect: deny
                      roles: []
                  total_affected_items: 1
                  total_failed_items: 0
                  failed_items: []
                message: "All specified policies were deleted"
                error: 0
        '400':
          $ref: '#/components/responses/ResponseError'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/PermissionDeniedResponse'
        '405':
          $ref: '#/components/responses/InvalidHTTPMethodResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'

  /security/policies/{policy_id}:
    put:
      tags:
        - Security
      summary: "Update policy"
      description: "Modify a policy, at least one property must be indicated"
      operationId: api.controllers.security_controller.update_policy
      x-rbac-actions:
        - $ref: '#/x-rbac-catalog/actions/security:update'
      parameters:
        - $ref: '#/components/parameters/policy_id_rbac'
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PoliciesRequest_no_required'
            example:
              name: 'wazuhPolicy'
              policy:
                actions:
                  - "agent:delete"
                resources:
                  - "agent:id:001"
                  - "agent:id:002"
                  - "agent:id:003"
                effect: 'allow'
      responses:
        '200':
          description: "Information of policy modified"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/AllItemsResponsePolicies'
              example:
                data:
                  affected_items:
                    - id: 100
                      name: TestWazuhPolicy
                      policy:
                        actions:
                          - "security:delete"
                        resources:
                          - "user:id:*"
                        effect: deny
                      roles: []
                  total_affected_items: 1
                  total_failed_items: 0
                  failed_items: []
                message: "Policy was successfully updated"
                error: 0

        '400':
          $ref: '#/components/responses/ResponseError'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/PermissionDeniedResponse'
        '405':
          $ref: '#/components/responses/InvalidHTTPMethodResponse'
        '406':
          $ref: '#/components/responses/WrongContentTypeResponse'
        '413':
          $ref: '#/components/responses/RequestTooLargeResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'

  /security/users/{user_id}/roles:
    post:
      tags:
        - Security
      summary: "Add roles to user"
      description: "Create a specified relation role-policy, one user may have multiples roles"
      operationId: api.controllers.security_controller.set_user_role
      x-rbac-actions:
        - $ref: '#/x-rbac-catalog/actions/security:update'
      parameters:
        - $ref: '#/components/parameters/user_id_required'
        - $ref: '#/components/parameters/role_ids_required'
        - $ref: '#/components/parameters/security_position'
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
      responses:
        '200':
          description: "Role information"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/AllItemsResponseUsers'
              example:
                data:
                  affected_items:
                    - id: 100
                      username: TestWazuhUsername
                      allow_run_as: false
                      roles:
                        - 1
                  total_affected_items: 1
                  total_failed_items: 0
                  failed_items: []
                message: "All roles were linked to TestWazuhUsername"
                error: 0
        '400':
          $ref: '#/components/responses/ResponseError'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/PermissionDeniedResponse'
        '405':
          $ref: '#/components/responses/InvalidHTTPMethodResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'

    delete:
      tags:
        - Security
      summary: "Remove roles from user"
      description: "Delete a specified relation user-roles"
      operationId: api.controllers.security_controller.remove_user_role
      x-rbac-actions:
        - $ref: '#/x-rbac-catalog/actions/security:delete'
      parameters:
        - $ref: '#/components/parameters/user_id_required'
        - $ref: '#/components/parameters/role_ids_delete'
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
      responses:
        '200':
          description: "Role information"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/AllItemsResponseUsers'
              example:
                data:
                  affected_items:
                    - id: 100
                      username: TestWazuhUsername
                      allow_run_as: false
                      roles: []
                  total_affected_items: 1
                  total_failed_items: 0
                  failed_items: []
                message: "All roles were unlinked from user TestWazuhUsername"
                error: 0
        '400':
          $ref: '#/components/responses/ResponseError'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/PermissionDeniedResponse'
        '405':
          $ref: '#/components/responses/InvalidHTTPMethodResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'

  /security/roles/{role_id}/policies:
    post:
      tags:
        - Security
      summary: "Add policies to role"
      description: "Create a specified relation role-policy, one role may have multiples policies"
      operationId: api.controllers.security_controller.set_role_policy
      x-rbac-actions:
        - $ref: '#/x-rbac-catalog/actions/security:update'
      parameters:
        - $ref: '#/components/parameters/role_id'
        - $ref: '#/components/parameters/policy_ids_rbac_required'
        - $ref: '#/components/parameters/security_position'
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
      responses:
        '200':
          description: "Role information"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
              example:
                data:
                  affected_items:
                    - id: 100
                      name: TestWazuhRole
                      policies:
                        - 100
                      users: []
                      rules: []
                  total_affected_items: 2
                  total_failed_items: 0
                  failed_items: []
                message: "All policies were linked to role 100"
                error: 0

        '400':
          $ref: '#/components/responses/ResponseError'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/PermissionDeniedResponse'
        '405':
          $ref: '#/components/responses/InvalidHTTPMethodResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'

    delete:
      tags:
        - Security
      summary: "Remove policies from role"
      description: "Delete a specified relation role-policy"
      operationId: api.controllers.security_controller.remove_role_policy
      x-rbac-actions:
        - $ref: '#/x-rbac-catalog/actions/security:delete'
      parameters:
        - $ref: '#/components/parameters/role_id'
        - $ref: '#/components/parameters/policy_ids_rbac_delete'
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
      responses:
        '200':
          description: "Role information"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
              example:
                data:
                  affected_items:
                    - id: 100
                      name: TestWazuhRole
                      policies: []
                      users: []
                      rules: []
                  total_affected_items: 2
                  total_failed_items: 0
                  failed_items: []
                message: "All policies were unlinked from role 100"
                error: 0
        '400':
          $ref: '#/components/responses/ResponseError'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/PermissionDeniedResponse'
        '405':
          $ref: '#/components/responses/InvalidHTTPMethodResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'

  /security/roles/{role_id}/rules:
    post:
      tags:
        - Security
      summary: "Add security rules to role"
      description: "Create a specific role-rule relation. One role may have multiple security rules"
      operationId: api.controllers.security_controller.set_role_rule
      x-rbac-actions:
        - $ref: '#/x-rbac-catalog/actions/security:update'
      parameters:
        - $ref: '#/components/parameters/role_id'
        - $ref: '#/components/parameters/security_rule_ids_required'
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
      responses:
        '200':
          description: "Role information"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
              example:
                data:
                  affected_items:
                    - id: 100
                      name: TestWazuhRole
                      policies: []
                      users: []
                      rules:
                        - 100
                  total_affected_items: 1
                  total_failed_items: 0
                  failed_items: []
                message: "All security rules were linked to role 100"
                error: 0

        '400':
          $ref: '#/components/responses/ResponseError'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/PermissionDeniedResponse'
        '405':
          $ref: '#/components/responses/InvalidHTTPMethodResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'

    delete:
      tags:
        - Security
      summary: "Remove security rules from role"
      description: "Delete a specific role-rule relation"
      operationId: api.controllers.security_controller.remove_role_rule
      x-rbac-actions:
        - $ref: '#/x-rbac-catalog/actions/security:delete'
      parameters:
        - $ref: '#/components/parameters/role_id'
        - $ref: '#/components/parameters/security_rule_ids_delete'
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
      responses:
        '200':
          description: "Role information"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
              example:
                data:
                  affected_items:
                    - id: 100
                      name: TestWazuhRole
                      policies: []
                      users: []
                      rules: []
                  total_affected_items: 2
                  total_failed_items: 0
                  failed_items: []
                message: "All security rules were unlinked from role 100"
                error: 0
        '400':
          $ref: '#/components/responses/ResponseError'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/PermissionDeniedResponse'
        '405':
          $ref: '#/components/responses/InvalidHTTPMethodResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'

  /orders:
    post:
      tags:
        - Orders
      summary: "Send orders"
      description: |-
        Send orders to the server and distribute them to other nodes and components.
      operationId: api.controllers.order_controller.post_orders
      x-rbac-actions:
        - $ref: '#/x-rbac-catalog/actions/order:send'
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
      requestBody:
        content:
          application/json:
            schema:
                type: object
                properties:
                  orders:
                    description: "Order list"
                    type: array
                    items:
                      $ref: '#/components/schemas/Order'
            example:
              orders:
                - source: Users/Services
                  user: Management API
                  target:
                    type: agent
                    id: 0192af7d-e760-7ca5-8a2e-c9d8df3fb904
                  action:
                    name: set-group
                    args: ['group1']
                    version: v5.0.0
                  timeout: 60
                  status: PENDING
                  order_id: l8nhoJIBerRY2Wz26Je8
                  request_id: lsnhoJIBerRY2Wz26Je7
      responses:
        '200':
          description: "Orders sent"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                data:
                  affected_items:
                    - l8nhoJIBerRY2Wz26Je8
                  total_affected_items: 1
                  total_failed_items: 0
                  failed_items: []
                message: "All orders were sent to the server"
                error: 0
        '400':
          $ref: '#/components/responses/ResponseError'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/PermissionDeniedResponse'
        '405':
          $ref: '#/components/responses/InvalidHTTPMethodResponse'
        '406':
          $ref: '#/components/responses/WrongContentTypeResponse'
        '413':
          $ref: '#/components/responses/RequestTooLargeResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'

  /security/config:
    get:
      tags:
        - Security
      summary: "Get security config"
      description: "Return the security configuration in JSON format"
      operationId: api.controllers.security_controller.get_security_config
      x-rbac-actions:
        - $ref: "#/x-rbac-catalog/actions/security:read_config"
      parameters:
        - $ref: "#/components/parameters/pretty"
        - $ref: "#/components/parameters/wait_for_complete"
      responses:
        '200':
          description: "Current security configuration"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"
              example:
                data:
                  auth_token_exp_timeout: 900
                  rbac_mode: white
                error: 0
        '400':
          $ref: '#/components/responses/ResponseError'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/PermissionDeniedResponse'
        '405':
          $ref: '#/components/responses/InvalidHTTPMethodResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'

    put:
      tags:
        - Security
      summary: "Update security config"
      description: "Update the security configuration with the data contained in the API request"
      operationId: api.controllers.security_controller.put_security_config
      x-rbac-actions:
        - $ref: "#/x-rbac-catalog/actions/security:update_config"
      parameters:
        - $ref: "#/components/parameters/pretty"
        - $ref: "#/components/parameters/wait_for_complete"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SecurityConfiguration"
      responses:
        '200':
          description: 'Configuration successfully updated'
          content:
            application/json:
              schema:
                type: object
              example:
                message: "Configuration was successfully updated"
                error: 0
        '400':
          $ref: '#/components/responses/ResponseError'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '405':
          $ref: '#/components/responses/InvalidHTTPMethodResponse'
        '406':
          $ref: '#/components/responses/WrongContentTypeResponse'
        '413':
          $ref: '#/components/responses/RequestTooLargeResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'

    delete:
      tags:
        - Security
      summary: "Restore default security config"
      description: "Replaces the security configuration with the original one"
      operationId: api.controllers.security_controller.delete_security_config
      x-rbac-actions:
        - $ref: "#/x-rbac-catalog/actions/security:update_config"
      parameters:
        - $ref: "#/components/parameters/pretty"
        - $ref: "#/components/parameters/wait_for_complete"
      responses:
        '200':
          description: 'Configuration successfully updated'
          content:
            application/json:
              schema:
                type: object
              example:
                message: "Configuration was successfully updated"
                error: 0
        '400':
          $ref: '#/components/responses/ResponseError'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '405':
          $ref: '#/components/responses/InvalidHTTPMethodResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'

externalDocs:
  description: "Learn more about the Wazuh API"
  url: 'https://documentation.wazuh.com/5.0/user-manual/api/index.html'
